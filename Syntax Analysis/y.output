Terminals unused in grammar

    MAIN
    ENDIF
    leftshift_assignment_operator
    rightshift_assignment_operator
    XOR_assignment_operator
    OR_assignment_operator
    AND_assignment_operator
    pipe_operator
    caret_operator
    amp_operator
    leftshift_operator
    rightshift_operator
    SIZEOF
    tilde_operator


State 0 conflicts: 9 shift/reduce
State 18 conflicts: 9 shift/reduce
State 87 conflicts: 1 shift/reduce
State 235 conflicts: 1 shift/reduce


Grammar

    0 $accept: declaration_list $end

    1 declaration_list: declaration D

    2 D: declaration_list
    3  | ε

    4 declaration: variable_declaration
    5            | function_declaration
    6            | structure_definition
    7            | enum_declaration

    8 variable_declaration: storage_classes type_specifier variable_declaration_list ';'
    9                     | storage_classes CONST type_specifier variable_declaration_list ';'
   10                     | structure_declaration

   11 variable_declaration_list: variable_declaration_identifier V

   12 V: ',' variable_declaration_list
   13  | ε

   14 $@1: ε

   15 variable_declaration_identifier: identifier $@1 vdi

   16 vdi: identifier_array_type
   17    | assignment_operator expression

   18 identifier_array_type: '[' initilization_params
   19                      | ε

   20 initilization_params: integer_constant ']' initilization
   21                     | ']' string_initilization

   22 initilization: string_initilization
   23              | array_initialization
   24              | ε

   25 type_specifier: INT
   26               | CHAR
   27               | FLOAT
   28               | DOUBLE
   29               | LONG long_grammar
   30               | SHORT short_grammar
   31               | UNSIGNED unsigned_grammar
   32               | SIGNED signed_grammar
   33               | VOID

   34 unsigned_grammar: INT
   35                 | LONG long_grammar
   36                 | SHORT short_grammar
   37                 | ε

   38 signed_grammar: INT
   39               | LONG long_grammar
   40               | SHORT short_grammar
   41               | ε

   42 long_grammar: INT
   43             | ε

   44 short_grammar: INT
   45              | ε

   46 $@2: ε

   47 structure_definition: struct_or_union identifier $@2 '{' V1 '}' ';'

   48 V1: variable_declaration V1
   49   | ε

   50 structure_declaration: struct_or_union identifier variable_declaration_list

   51 struct_or_union: STRUCT
   52                | UNION

   53 storage_classes: AUTO
   54                | STATIC
   55                | REGISTER
   56                | EXTERN
   57                | ε

   58 function_declaration: function_declaration_type function_declaration_param_statement

   59 function_declaration_type: type_specifier identifier '('

   60 function_declaration_param_statement: params ')' statement

   61 params: parameters_list
   62       | ε

   63 parameters_list: type_specifier parameters_identifier_list

   64 parameters_identifier_list: param_identifier parameters_identifier_list_breakup

   65 parameters_identifier_list_breakup: ',' parameters_list
   66                                   | ε

   67 $@3: ε

   68 param_identifier: identifier $@3 param_identifier_breakup

   69 param_identifier_breakup: '[' ']'
   70                         | ε

   71 statement: expression_statment
   72          | compound_statement
   73          | conditional_statements
   74          | iterative_statements
   75          | return_statement
   76          | break_statement
   77          | variable_declaration
   78          | switch_case

   79 compound_statement: '{' statment_list '}'

   80 statment_list: statement statment_list
   81              | ε

   82 expression_statment: expression ';'
   83                    | ';'

   84 conditional_statements: IF '(' simple_expression ')' statement conditional_statements_breakup

   85 conditional_statements_breakup: ELSE statement
   86                               | ε

   87 iterative_statements: WHILE '(' simple_expression ')' statement
   88                     | FOR '(' expression ';' simple_expression ';' expression ')'
   89                     | DO statement WHILE '(' simple_expression ')' ';'

   90 return_statement: RETURN return_statement_breakup

   91 return_statement_breakup: ';'
   92                         | expression ';'

   93 break_statement: BREAK ';'

   94 string_initilization: assignment_operator string_constant

   95 array_initialization: assignment_operator '{' array_int_declarations '}'

   96 array_int_declarations: integer_constant array_int_declarations_breakup

   97 array_int_declarations_breakup: ',' array_int_declarations
   98                               | ε

   99 expression: mutable expression_breakup
  100           | simple_expression

  101 expression_breakup: assignment_operator expression
  102                   | addition_assignment_operator expression
  103                   | subtraction_assignment_operator expression
  104                   | multiplication_assignment_operator expression
  105                   | division_assignment_operator expression
  106                   | modulo_assignment_operator expression
  107                   | increment_operator
  108                   | decrement_operator

  109 simple_expression: and_expression simple_expression_breakup

  110 simple_expression_breakup: OR_operator and_expression simple_expression_breakup
  111                          | ε

  112 and_expression: unary_relation_expression and_expression_breakup

  113 and_expression_breakup: AND_operator unary_relation_expression and_expression_breakup
  114                       | ε

  115 unary_relation_expression: exclamation_operator unary_relation_expression
  116                          | regular_expression

  117 regular_expression: sum_expression regular_expression_breakup

  118 regular_expression_breakup: relational_operators sum_expression
  119                           | ε

  120 relational_operators: greaterthan_assignment_operator
  121                     | lessthan_assignment_operator
  122                     | greaterthan_operator
  123                     | lessthan_operator
  124                     | equality_operator
  125                     | inequality_operator

  126 sum_expression: sum_expression sum_operators term
  127               | term

  128 sum_operators: add_operator
  129              | subtract_operator

  130 term: term MULOP factor
  131     | factor

  132 MULOP: multiplication_operator
  133      | division_operator
  134      | modulo_operator

  135 factor: immutable
  136       | mutable

  137 mutable: identifier
  138        | mutable mutable_breakup

  139 mutable_breakup: '[' expression ']'
  140                | '.' identifier

  141 immutable: '(' expression ')'
  142          | call
  143          | constant

  144 call: identifier '(' arguments ')'

  145 arguments: arguments_list
  146          | ε

  147 arguments_list: expression A

  148 A: ',' expression A
  149  | ε

  150 constant: integer_constant
  151         | string_constant
  152         | float_constant
  153         | character_constant

  154 enum_declaration: ENUM identifier '{' enum_list '}' ';'

  155 enum_list: enumerator
  156          | enum_list ',' enumerator

  157 enumerator: identifier
  158           | identifier assignment_operator integer_constant

  159 switch_case: SWITCH '(' identifier ')' '{' case_list '}'

  160 case_list: case_entry BREAK ';'
  161          | case_list case_entry BREAK ';'

  162 case_entry: CASE constant ':' statement
  163           | CASE constant SPREAD constant ':' statement
  164           | DEFAULT ':' statement
  165           | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 59 84 87 88 89 141 144 159
    ')' (41) 60 84 87 88 89 141 144 159
    ',' (44) 12 65 97 148 156
    '.' (46) 140
    ':' (58) 162 163 164
    ';' (59) 8 9 47 82 83 88 89 91 92 93 154 160 161
    '[' (91) 18 69 139
    ']' (93) 20 21 69 139
    '{' (123) 47 79 95 154 159
    '}' (125) 47 79 95 154 159
    error (256)
    IF (258) 84
    INT (259) 25 34 38 42 44
    CHAR (260) 26
    FLOAT (261) 27
    DOUBLE (262) 28
    LONG (263) 29 35 39
    SHORT (264) 30 36 40
    SIGNED (265) 32
    UNSIGNED (266) 31
    CONST (267) 9
    STRUCT (268) 51
    ENUM (269) 154
    UNION (270) 52
    RETURN (271) 90
    MAIN (272)
    VOID (273) 33
    WHILE (274) 87 89
    FOR (275) 88
    DO (276) 89
    BREAK (277) 93 160 161
    ENDIF (278)
    SWITCH (279) 159
    CASE (280) 162 163
    DEFAULT (281) 164
    SPREAD (282) 163
    AUTO (283) 53
    STATIC (284) 54
    REGISTER (285) 55
    EXTERN (286) 56
    identifier (287) 15 47 50 59 68 137 140 144 154 157 158 159
    integer_constant (288) 20 96 150 158
    string_constant (289) 94 151
    float_constant (290) 152
    character_constant (291) 153
    ELSE (292) 85
    leftshift_assignment_operator (293)
    rightshift_assignment_operator (294)
    XOR_assignment_operator (295)
    OR_assignment_operator (296)
    AND_assignment_operator (297)
    modulo_assignment_operator (298) 106
    multiplication_assignment_operator (299) 104
    division_assignment_operator (300) 105
    addition_assignment_operator (301) 102
    subtraction_assignment_operator (302) 103
    assignment_operator (303) 17 94 95 101 158
    OR_operator (304) 110
    AND_operator (305) 113
    pipe_operator (306)
    caret_operator (307)
    amp_operator (308)
    equality_operator (309) 124
    inequality_operator (310) 125
    lessthan_assignment_operator (311) 121
    lessthan_operator (312) 123
    greaterthan_assignment_operator (313) 120
    greaterthan_operator (314) 122
    leftshift_operator (315)
    rightshift_operator (316)
    add_operator (317) 128
    subtract_operator (318) 129
    multiplication_operator (319) 132
    division_operator (320) 133
    modulo_operator (321) 134
    SIZEOF (322)
    tilde_operator (323)
    exclamation_operator (324) 115
    increment_operator (325) 107
    decrement_operator (326) 108


Nonterminals, with rules where they appear

    $accept (82)
        on left: 0
    declaration_list (83)
        on left: 1
        on right: 0 2
    D (84)
        on left: 2 3
        on right: 1
    declaration (85)
        on left: 4 5 6 7
        on right: 1
    variable_declaration (86)
        on left: 8 9 10
        on right: 4 48 77
    variable_declaration_list (87)
        on left: 11
        on right: 8 9 12 50
    V (88)
        on left: 12 13
        on right: 11
    variable_declaration_identifier (89)
        on left: 15
        on right: 11
    $@1 (90)
        on left: 14
        on right: 15
    vdi (91)
        on left: 16 17
        on right: 15
    identifier_array_type (92)
        on left: 18 19
        on right: 16
    initilization_params (93)
        on left: 20 21
        on right: 18
    initilization (94)
        on left: 22 23 24
        on right: 20
    type_specifier (95)
        on left: 25 26 27 28 29 30 31 32 33
        on right: 8 9 59 63
    unsigned_grammar (96)
        on left: 34 35 36 37
        on right: 31
    signed_grammar (97)
        on left: 38 39 40 41
        on right: 32
    long_grammar (98)
        on left: 42 43
        on right: 29 35 39
    short_grammar (99)
        on left: 44 45
        on right: 30 36 40
    structure_definition (100)
        on left: 47
        on right: 6
    $@2 (101)
        on left: 46
        on right: 47
    V1 (102)
        on left: 48 49
        on right: 47 48
    structure_declaration (103)
        on left: 50
        on right: 10
    struct_or_union (104)
        on left: 51 52
        on right: 47 50
    storage_classes (105)
        on left: 53 54 55 56 57
        on right: 8 9
    function_declaration (106)
        on left: 58
        on right: 5
    function_declaration_type (107)
        on left: 59
        on right: 58
    function_declaration_param_statement (108)
        on left: 60
        on right: 58
    params (109)
        on left: 61 62
        on right: 60
    parameters_list (110)
        on left: 63
        on right: 61 65
    parameters_identifier_list (111)
        on left: 64
        on right: 63
    parameters_identifier_list_breakup (112)
        on left: 65 66
        on right: 64
    param_identifier (113)
        on left: 68
        on right: 64
    $@3 (114)
        on left: 67
        on right: 68
    param_identifier_breakup (115)
        on left: 69 70
        on right: 68
    statement (116)
        on left: 71 72 73 74 75 76 77 78
        on right: 60 80 84 85 87 89 162 163 164
    compound_statement (117)
        on left: 79
        on right: 72
    statment_list (118)
        on left: 80 81
        on right: 79 80
    expression_statment (119)
        on left: 82 83
        on right: 71
    conditional_statements (120)
        on left: 84
        on right: 73
    conditional_statements_breakup (121)
        on left: 85 86
        on right: 84
    iterative_statements (122)
        on left: 87 88 89
        on right: 74
    return_statement (123)
        on left: 90
        on right: 75
    return_statement_breakup (124)
        on left: 91 92
        on right: 90
    break_statement (125)
        on left: 93
        on right: 76
    string_initilization (126)
        on left: 94
        on right: 21 22
    array_initialization (127)
        on left: 95
        on right: 23
    array_int_declarations (128)
        on left: 96
        on right: 95 97
    array_int_declarations_breakup (129)
        on left: 97 98
        on right: 96
    expression (130)
        on left: 99 100
        on right: 17 82 88 92 101 102 103 104 105 106 139 141 147 148
    expression_breakup (131)
        on left: 101 102 103 104 105 106 107 108
        on right: 99
    simple_expression (132)
        on left: 109
        on right: 84 87 88 89 100
    simple_expression_breakup (133)
        on left: 110 111
        on right: 109 110
    and_expression (134)
        on left: 112
        on right: 109 110
    and_expression_breakup (135)
        on left: 113 114
        on right: 112 113
    unary_relation_expression (136)
        on left: 115 116
        on right: 112 113 115
    regular_expression (137)
        on left: 117
        on right: 116
    regular_expression_breakup (138)
        on left: 118 119
        on right: 117
    relational_operators (139)
        on left: 120 121 122 123 124 125
        on right: 118
    sum_expression (140)
        on left: 126 127
        on right: 117 118 126
    sum_operators (141)
        on left: 128 129
        on right: 126
    term (142)
        on left: 130 131
        on right: 126 127 130
    MULOP (143)
        on left: 132 133 134
        on right: 130
    factor (144)
        on left: 135 136
        on right: 130 131
    mutable (145)
        on left: 137 138
        on right: 99 136 138
    mutable_breakup (146)
        on left: 139 140
        on right: 138
    immutable (147)
        on left: 141 142 143
        on right: 135
    call (148)
        on left: 144
        on right: 142
    arguments (149)
        on left: 145 146
        on right: 144
    arguments_list (150)
        on left: 147
        on right: 145
    A (151)
        on left: 148 149
        on right: 147 148
    constant (152)
        on left: 150 151 152 153
        on right: 143 162 163
    enum_declaration (153)
        on left: 154
        on right: 7
    enum_list (154)
        on left: 155 156
        on right: 154 156
    enumerator (155)
        on left: 157 158
        on right: 155 156
    switch_case (156)
        on left: 159
        on right: 78
    case_list (157)
        on left: 160 161
        on right: 159 161
    case_entry (158)
        on left: 162 163 164 165
        on right: 160 161


State 0

    0 $accept: • declaration_list $end

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    STRUCT    shift, and go to state 9
    ENUM      shift, and go to state 10
    UNION     shift, and go to state 11
    VOID      shift, and go to state 12
    AUTO      shift, and go to state 13
    STATIC    shift, and go to state 14
    REGISTER  shift, and go to state 15
    EXTERN    shift, and go to state 16

    INT       [reduce using rule 57 (storage_classes)]
    CHAR      [reduce using rule 57 (storage_classes)]
    FLOAT     [reduce using rule 57 (storage_classes)]
    DOUBLE    [reduce using rule 57 (storage_classes)]
    LONG      [reduce using rule 57 (storage_classes)]
    SHORT     [reduce using rule 57 (storage_classes)]
    SIGNED    [reduce using rule 57 (storage_classes)]
    UNSIGNED  [reduce using rule 57 (storage_classes)]
    VOID      [reduce using rule 57 (storage_classes)]
    $default  reduce using rule 57 (storage_classes)

    declaration_list           go to state 17
    declaration                go to state 18
    variable_declaration       go to state 19
    type_specifier             go to state 20
    structure_definition       go to state 21
    structure_declaration      go to state 22
    struct_or_union            go to state 23
    storage_classes            go to state 24
    function_declaration       go to state 25
    function_declaration_type  go to state 26
    enum_declaration           go to state 27


State 1

   25 type_specifier: INT •

    $default  reduce using rule 25 (type_specifier)


State 2

   26 type_specifier: CHAR •

    $default  reduce using rule 26 (type_specifier)


State 3

   27 type_specifier: FLOAT •

    $default  reduce using rule 27 (type_specifier)


State 4

   28 type_specifier: DOUBLE •

    $default  reduce using rule 28 (type_specifier)


State 5

   29 type_specifier: LONG • long_grammar

    INT  shift, and go to state 28

    $default  reduce using rule 43 (long_grammar)

    long_grammar  go to state 29


State 6

   30 type_specifier: SHORT • short_grammar

    INT  shift, and go to state 30

    $default  reduce using rule 45 (short_grammar)

    short_grammar  go to state 31


State 7

   32 type_specifier: SIGNED • signed_grammar

    INT    shift, and go to state 32
    LONG   shift, and go to state 33
    SHORT  shift, and go to state 34

    $default  reduce using rule 41 (signed_grammar)

    signed_grammar  go to state 35


State 8

   31 type_specifier: UNSIGNED • unsigned_grammar

    INT    shift, and go to state 36
    LONG   shift, and go to state 37
    SHORT  shift, and go to state 38

    $default  reduce using rule 37 (unsigned_grammar)

    unsigned_grammar  go to state 39


State 9

   51 struct_or_union: STRUCT •

    $default  reduce using rule 51 (struct_or_union)


State 10

  154 enum_declaration: ENUM • identifier '{' enum_list '}' ';'

    identifier  shift, and go to state 40


State 11

   52 struct_or_union: UNION •

    $default  reduce using rule 52 (struct_or_union)


State 12

   33 type_specifier: VOID •

    $default  reduce using rule 33 (type_specifier)


State 13

   53 storage_classes: AUTO •

    $default  reduce using rule 53 (storage_classes)


State 14

   54 storage_classes: STATIC •

    $default  reduce using rule 54 (storage_classes)


State 15

   55 storage_classes: REGISTER •

    $default  reduce using rule 55 (storage_classes)


State 16

   56 storage_classes: EXTERN •

    $default  reduce using rule 56 (storage_classes)


State 17

    0 $accept: declaration_list • $end

    $end  shift, and go to state 41


State 18

    1 declaration_list: declaration • D

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    STRUCT    shift, and go to state 9
    ENUM      shift, and go to state 10
    UNION     shift, and go to state 11
    VOID      shift, and go to state 12
    AUTO      shift, and go to state 13
    STATIC    shift, and go to state 14
    REGISTER  shift, and go to state 15
    EXTERN    shift, and go to state 16

    INT       [reduce using rule 57 (storage_classes)]
    CHAR      [reduce using rule 57 (storage_classes)]
    FLOAT     [reduce using rule 57 (storage_classes)]
    DOUBLE    [reduce using rule 57 (storage_classes)]
    LONG      [reduce using rule 57 (storage_classes)]
    SHORT     [reduce using rule 57 (storage_classes)]
    SIGNED    [reduce using rule 57 (storage_classes)]
    UNSIGNED  [reduce using rule 57 (storage_classes)]
    CONST     reduce using rule 57 (storage_classes)
    VOID      [reduce using rule 57 (storage_classes)]
    $default  reduce using rule 3 (D)

    declaration_list           go to state 42
    D                          go to state 43
    declaration                go to state 18
    variable_declaration       go to state 19
    type_specifier             go to state 20
    structure_definition       go to state 21
    structure_declaration      go to state 22
    struct_or_union            go to state 23
    storage_classes            go to state 24
    function_declaration       go to state 25
    function_declaration_type  go to state 26
    enum_declaration           go to state 27


State 19

    4 declaration: variable_declaration •

    $default  reduce using rule 4 (declaration)


State 20

   59 function_declaration_type: type_specifier • identifier '('

    identifier  shift, and go to state 44


State 21

    6 declaration: structure_definition •

    $default  reduce using rule 6 (declaration)


State 22

   10 variable_declaration: structure_declaration •

    $default  reduce using rule 10 (variable_declaration)


State 23

   47 structure_definition: struct_or_union • identifier $@2 '{' V1 '}' ';'
   50 structure_declaration: struct_or_union • identifier variable_declaration_list

    identifier  shift, and go to state 45


State 24

    8 variable_declaration: storage_classes • type_specifier variable_declaration_list ';'
    9                     | storage_classes • CONST type_specifier variable_declaration_list ';'

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    CONST     shift, and go to state 46
    VOID      shift, and go to state 12

    type_specifier  go to state 47


State 25

    5 declaration: function_declaration •

    $default  reduce using rule 5 (declaration)


State 26

   58 function_declaration: function_declaration_type • function_declaration_param_statement

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 12

    $default  reduce using rule 62 (params)

    type_specifier                        go to state 48
    function_declaration_param_statement  go to state 49
    params                                go to state 50
    parameters_list                       go to state 51


State 27

    7 declaration: enum_declaration •

    $default  reduce using rule 7 (declaration)


State 28

   42 long_grammar: INT •

    $default  reduce using rule 42 (long_grammar)


State 29

   29 type_specifier: LONG long_grammar •

    $default  reduce using rule 29 (type_specifier)


State 30

   44 short_grammar: INT •

    $default  reduce using rule 44 (short_grammar)


State 31

   30 type_specifier: SHORT short_grammar •

    $default  reduce using rule 30 (type_specifier)


State 32

   38 signed_grammar: INT •

    $default  reduce using rule 38 (signed_grammar)


State 33

   39 signed_grammar: LONG • long_grammar

    INT  shift, and go to state 28

    $default  reduce using rule 43 (long_grammar)

    long_grammar  go to state 52


State 34

   40 signed_grammar: SHORT • short_grammar

    INT  shift, and go to state 30

    $default  reduce using rule 45 (short_grammar)

    short_grammar  go to state 53


State 35

   32 type_specifier: SIGNED signed_grammar •

    $default  reduce using rule 32 (type_specifier)


State 36

   34 unsigned_grammar: INT •

    $default  reduce using rule 34 (unsigned_grammar)


State 37

   35 unsigned_grammar: LONG • long_grammar

    INT  shift, and go to state 28

    $default  reduce using rule 43 (long_grammar)

    long_grammar  go to state 54


State 38

   36 unsigned_grammar: SHORT • short_grammar

    INT  shift, and go to state 30

    $default  reduce using rule 45 (short_grammar)

    short_grammar  go to state 55


State 39

   31 type_specifier: UNSIGNED unsigned_grammar •

    $default  reduce using rule 31 (type_specifier)


State 40

  154 enum_declaration: ENUM identifier • '{' enum_list '}' ';'

    '{'  shift, and go to state 56


State 41

    0 $accept: declaration_list $end •

    $default  accept


State 42

    2 D: declaration_list •

    $default  reduce using rule 2 (D)


State 43

    1 declaration_list: declaration D •

    $default  reduce using rule 1 (declaration_list)


State 44

   59 function_declaration_type: type_specifier identifier • '('

    '('  shift, and go to state 57


State 45

   47 structure_definition: struct_or_union identifier • $@2 '{' V1 '}' ';'
   50 structure_declaration: struct_or_union identifier • variable_declaration_list

    identifier  shift, and go to state 58

    $default  reduce using rule 46 ($@2)

    variable_declaration_list        go to state 59
    variable_declaration_identifier  go to state 60
    $@2                              go to state 61


State 46

    9 variable_declaration: storage_classes CONST • type_specifier variable_declaration_list ';'

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 12

    type_specifier  go to state 62


State 47

    8 variable_declaration: storage_classes type_specifier • variable_declaration_list ';'

    identifier  shift, and go to state 58

    variable_declaration_list        go to state 63
    variable_declaration_identifier  go to state 60


State 48

   63 parameters_list: type_specifier • parameters_identifier_list

    identifier  shift, and go to state 64

    parameters_identifier_list  go to state 65
    param_identifier            go to state 66


State 49

   58 function_declaration: function_declaration_type function_declaration_param_statement •

    $default  reduce using rule 58 (function_declaration)


State 50

   60 function_declaration_param_statement: params • ')' statement

    ')'  shift, and go to state 67


State 51

   61 params: parameters_list •

    $default  reduce using rule 61 (params)


State 52

   39 signed_grammar: LONG long_grammar •

    $default  reduce using rule 39 (signed_grammar)


State 53

   40 signed_grammar: SHORT short_grammar •

    $default  reduce using rule 40 (signed_grammar)


State 54

   35 unsigned_grammar: LONG long_grammar •

    $default  reduce using rule 35 (unsigned_grammar)


State 55

   36 unsigned_grammar: SHORT short_grammar •

    $default  reduce using rule 36 (unsigned_grammar)


State 56

  154 enum_declaration: ENUM identifier '{' • enum_list '}' ';'

    identifier  shift, and go to state 68

    enum_list   go to state 69
    enumerator  go to state 70


State 57

   59 function_declaration_type: type_specifier identifier '(' •

    $default  reduce using rule 59 (function_declaration_type)


State 58

   15 variable_declaration_identifier: identifier • $@1 vdi

    $default  reduce using rule 14 ($@1)

    $@1  go to state 71


State 59

   50 structure_declaration: struct_or_union identifier variable_declaration_list •

    $default  reduce using rule 50 (structure_declaration)


State 60

   11 variable_declaration_list: variable_declaration_identifier • V

    ','  shift, and go to state 72

    $default  reduce using rule 13 (V)

    V  go to state 73


State 61

   47 structure_definition: struct_or_union identifier $@2 • '{' V1 '}' ';'

    '{'  shift, and go to state 74


State 62

    9 variable_declaration: storage_classes CONST type_specifier • variable_declaration_list ';'

    identifier  shift, and go to state 58

    variable_declaration_list        go to state 75
    variable_declaration_identifier  go to state 60


State 63

    8 variable_declaration: storage_classes type_specifier variable_declaration_list • ';'

    ';'  shift, and go to state 76


State 64

   68 param_identifier: identifier • $@3 param_identifier_breakup

    $default  reduce using rule 67 ($@3)

    $@3  go to state 77


State 65

   63 parameters_list: type_specifier parameters_identifier_list •

    $default  reduce using rule 63 (parameters_list)


State 66

   64 parameters_identifier_list: param_identifier • parameters_identifier_list_breakup

    ','  shift, and go to state 78

    $default  reduce using rule 66 (parameters_identifier_list_breakup)

    parameters_identifier_list_breakup  go to state 79


State 67

   60 function_declaration_param_statement: params ')' • statement

    IF                    shift, and go to state 80
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 81
    WHILE                 shift, and go to state 82
    FOR                   shift, and go to state 83
    DO                    shift, and go to state 84
    BREAK                 shift, and go to state 85
    SWITCH                shift, and go to state 86
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    ';'                   shift, and go to state 93
    '{'                   shift, and go to state 94
    '('                   shift, and go to state 95

    $default  reduce using rule 57 (storage_classes)

    variable_declaration       go to state 96
    structure_declaration      go to state 22
    struct_or_union            go to state 97
    storage_classes            go to state 24
    statement                  go to state 98
    compound_statement         go to state 99
    expression_statment        go to state 100
    conditional_statements     go to state 101
    iterative_statements       go to state 102
    return_statement           go to state 103
    break_statement            go to state 104
    expression                 go to state 105
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116
    switch_case                go to state 117


State 68

  157 enumerator: identifier •
  158           | identifier • assignment_operator integer_constant

    assignment_operator  shift, and go to state 118

    $default  reduce using rule 157 (enumerator)


State 69

  154 enum_declaration: ENUM identifier '{' enum_list • '}' ';'
  156 enum_list: enum_list • ',' enumerator

    ','  shift, and go to state 119
    '}'  shift, and go to state 120


State 70

  155 enum_list: enumerator •

    $default  reduce using rule 155 (enum_list)


State 71

   15 variable_declaration_identifier: identifier $@1 • vdi

    assignment_operator  shift, and go to state 121
    '['                  shift, and go to state 122

    $default  reduce using rule 19 (identifier_array_type)

    vdi                    go to state 123
    identifier_array_type  go to state 124


State 72

   12 V: ',' • variable_declaration_list

    identifier  shift, and go to state 58

    variable_declaration_list        go to state 125
    variable_declaration_identifier  go to state 60


State 73

   11 variable_declaration_list: variable_declaration_identifier V •

    $default  reduce using rule 11 (variable_declaration_list)


State 74

   47 structure_definition: struct_or_union identifier $@2 '{' • V1 '}' ';'

    STRUCT    shift, and go to state 9
    UNION     shift, and go to state 11
    AUTO      shift, and go to state 13
    STATIC    shift, and go to state 14
    REGISTER  shift, and go to state 15
    EXTERN    shift, and go to state 16

    '}'       reduce using rule 49 (V1)
    $default  reduce using rule 57 (storage_classes)

    variable_declaration   go to state 126
    V1                     go to state 127
    structure_declaration  go to state 22
    struct_or_union        go to state 97
    storage_classes        go to state 24


State 75

    9 variable_declaration: storage_classes CONST type_specifier variable_declaration_list • ';'

    ';'  shift, and go to state 128


State 76

    8 variable_declaration: storage_classes type_specifier variable_declaration_list ';' •

    $default  reduce using rule 8 (variable_declaration)


State 77

   68 param_identifier: identifier $@3 • param_identifier_breakup

    '['  shift, and go to state 129

    $default  reduce using rule 70 (param_identifier_breakup)

    param_identifier_breakup  go to state 130


State 78

   65 parameters_identifier_list_breakup: ',' • parameters_list

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 12

    type_specifier   go to state 48
    parameters_list  go to state 131


State 79

   64 parameters_identifier_list: param_identifier parameters_identifier_list_breakup •

    $default  reduce using rule 64 (parameters_identifier_list)


State 80

   84 conditional_statements: IF • '(' simple_expression ')' statement conditional_statements_breakup

    '('  shift, and go to state 132


State 81

   90 return_statement: RETURN • return_statement_breakup

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    ';'                   shift, and go to state 133
    '('                   shift, and go to state 95

    return_statement_breakup   go to state 134
    expression                 go to state 135
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 82

   87 iterative_statements: WHILE • '(' simple_expression ')' statement

    '('  shift, and go to state 136


State 83

   88 iterative_statements: FOR • '(' expression ';' simple_expression ';' expression ')'

    '('  shift, and go to state 137


State 84

   89 iterative_statements: DO • statement WHILE '(' simple_expression ')' ';'

    IF                    shift, and go to state 80
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 81
    WHILE                 shift, and go to state 82
    FOR                   shift, and go to state 83
    DO                    shift, and go to state 84
    BREAK                 shift, and go to state 85
    SWITCH                shift, and go to state 86
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    ';'                   shift, and go to state 93
    '{'                   shift, and go to state 94
    '('                   shift, and go to state 95

    $default  reduce using rule 57 (storage_classes)

    variable_declaration       go to state 96
    structure_declaration      go to state 22
    struct_or_union            go to state 97
    storage_classes            go to state 24
    statement                  go to state 138
    compound_statement         go to state 99
    expression_statment        go to state 100
    conditional_statements     go to state 101
    iterative_statements       go to state 102
    return_statement           go to state 103
    break_statement            go to state 104
    expression                 go to state 105
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116
    switch_case                go to state 117


State 85

   93 break_statement: BREAK • ';'

    ';'  shift, and go to state 139


State 86

  159 switch_case: SWITCH • '(' identifier ')' '{' case_list '}'

    '('  shift, and go to state 140


State 87

  137 mutable: identifier •
  144 call: identifier • '(' arguments ')'

    '('  shift, and go to state 141

    '('       [reduce using rule 137 (mutable)]
    $default  reduce using rule 137 (mutable)


State 88

  150 constant: integer_constant •

    $default  reduce using rule 150 (constant)


State 89

  151 constant: string_constant •

    $default  reduce using rule 151 (constant)


State 90

  152 constant: float_constant •

    $default  reduce using rule 152 (constant)


State 91

  153 constant: character_constant •

    $default  reduce using rule 153 (constant)


State 92

  115 unary_relation_expression: exclamation_operator • unary_relation_expression

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    unary_relation_expression  go to state 142
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 143
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 93

   83 expression_statment: ';' •

    $default  reduce using rule 83 (expression_statment)


State 94

   79 compound_statement: '{' • statment_list '}'

    IF                    shift, and go to state 80
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 81
    WHILE                 shift, and go to state 82
    FOR                   shift, and go to state 83
    DO                    shift, and go to state 84
    BREAK                 shift, and go to state 85
    SWITCH                shift, and go to state 86
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    ';'                   shift, and go to state 93
    '{'                   shift, and go to state 94
    '('                   shift, and go to state 95

    '}'       reduce using rule 81 (statment_list)
    $default  reduce using rule 57 (storage_classes)

    variable_declaration       go to state 96
    structure_declaration      go to state 22
    struct_or_union            go to state 97
    storage_classes            go to state 24
    statement                  go to state 144
    compound_statement         go to state 99
    statment_list              go to state 145
    expression_statment        go to state 100
    conditional_statements     go to state 101
    iterative_statements       go to state 102
    return_statement           go to state 103
    break_statement            go to state 104
    expression                 go to state 105
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116
    switch_case                go to state 117


State 95

  141 immutable: '(' • expression ')'

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 146
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 96

   77 statement: variable_declaration •

    $default  reduce using rule 77 (statement)


State 97

   50 structure_declaration: struct_or_union • identifier variable_declaration_list

    identifier  shift, and go to state 147


State 98

   60 function_declaration_param_statement: params ')' statement •

    $default  reduce using rule 60 (function_declaration_param_statement)


State 99

   72 statement: compound_statement •

    $default  reduce using rule 72 (statement)


State 100

   71 statement: expression_statment •

    $default  reduce using rule 71 (statement)


State 101

   73 statement: conditional_statements •

    $default  reduce using rule 73 (statement)


State 102

   74 statement: iterative_statements •

    $default  reduce using rule 74 (statement)


State 103

   75 statement: return_statement •

    $default  reduce using rule 75 (statement)


State 104

   76 statement: break_statement •

    $default  reduce using rule 76 (statement)


State 105

   82 expression_statment: expression • ';'

    ';'  shift, and go to state 148


State 106

  100 expression: simple_expression •

    $default  reduce using rule 100 (expression)


State 107

  109 simple_expression: and_expression • simple_expression_breakup

    OR_operator  shift, and go to state 149

    $default  reduce using rule 111 (simple_expression_breakup)

    simple_expression_breakup  go to state 150


State 108

  112 and_expression: unary_relation_expression • and_expression_breakup

    AND_operator  shift, and go to state 151

    $default  reduce using rule 114 (and_expression_breakup)

    and_expression_breakup  go to state 152


State 109

  116 unary_relation_expression: regular_expression •

    $default  reduce using rule 116 (unary_relation_expression)


State 110

  117 regular_expression: sum_expression • regular_expression_breakup
  126 sum_expression: sum_expression • sum_operators term

    equality_operator                shift, and go to state 153
    inequality_operator              shift, and go to state 154
    lessthan_assignment_operator     shift, and go to state 155
    lessthan_operator                shift, and go to state 156
    greaterthan_assignment_operator  shift, and go to state 157
    greaterthan_operator             shift, and go to state 158
    add_operator                     shift, and go to state 159
    subtract_operator                shift, and go to state 160

    $default  reduce using rule 119 (regular_expression_breakup)

    regular_expression_breakup  go to state 161
    relational_operators        go to state 162
    sum_operators               go to state 163


State 111

  127 sum_expression: term •
  130 term: term • MULOP factor

    multiplication_operator  shift, and go to state 164
    division_operator        shift, and go to state 165
    modulo_operator          shift, and go to state 166

    $default  reduce using rule 127 (sum_expression)

    MULOP  go to state 167


State 112

  131 term: factor •

    $default  reduce using rule 131 (term)


State 113

   99 expression: mutable • expression_breakup
  136 factor: mutable •
  138 mutable: mutable • mutable_breakup

    modulo_assignment_operator          shift, and go to state 168
    multiplication_assignment_operator  shift, and go to state 169
    division_assignment_operator        shift, and go to state 170
    addition_assignment_operator        shift, and go to state 171
    subtraction_assignment_operator     shift, and go to state 172
    assignment_operator                 shift, and go to state 173
    increment_operator                  shift, and go to state 174
    decrement_operator                  shift, and go to state 175
    '['                                 shift, and go to state 176
    '.'                                 shift, and go to state 177

    $default  reduce using rule 136 (factor)

    expression_breakup  go to state 178
    mutable_breakup     go to state 179


State 114

  135 factor: immutable •

    $default  reduce using rule 135 (factor)


State 115

  142 immutable: call •

    $default  reduce using rule 142 (immutable)


State 116

  143 immutable: constant •

    $default  reduce using rule 143 (immutable)


State 117

   78 statement: switch_case •

    $default  reduce using rule 78 (statement)


State 118

  158 enumerator: identifier assignment_operator • integer_constant

    integer_constant  shift, and go to state 180


State 119

  156 enum_list: enum_list ',' • enumerator

    identifier  shift, and go to state 68

    enumerator  go to state 181


State 120

  154 enum_declaration: ENUM identifier '{' enum_list '}' • ';'

    ';'  shift, and go to state 182


State 121

   17 vdi: assignment_operator • expression

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 183
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 122

   18 identifier_array_type: '[' • initilization_params

    integer_constant  shift, and go to state 184
    ']'               shift, and go to state 185

    initilization_params  go to state 186


State 123

   15 variable_declaration_identifier: identifier $@1 vdi •

    $default  reduce using rule 15 (variable_declaration_identifier)


State 124

   16 vdi: identifier_array_type •

    $default  reduce using rule 16 (vdi)


State 125

   12 V: ',' variable_declaration_list •

    $default  reduce using rule 12 (V)


State 126

   48 V1: variable_declaration • V1

    STRUCT    shift, and go to state 9
    UNION     shift, and go to state 11
    AUTO      shift, and go to state 13
    STATIC    shift, and go to state 14
    REGISTER  shift, and go to state 15
    EXTERN    shift, and go to state 16

    '}'       reduce using rule 49 (V1)
    $default  reduce using rule 57 (storage_classes)

    variable_declaration   go to state 126
    V1                     go to state 187
    structure_declaration  go to state 22
    struct_or_union        go to state 97
    storage_classes        go to state 24


State 127

   47 structure_definition: struct_or_union identifier $@2 '{' V1 • '}' ';'

    '}'  shift, and go to state 188


State 128

    9 variable_declaration: storage_classes CONST type_specifier variable_declaration_list ';' •

    $default  reduce using rule 9 (variable_declaration)


State 129

   69 param_identifier_breakup: '[' • ']'

    ']'  shift, and go to state 189


State 130

   68 param_identifier: identifier $@3 param_identifier_breakup •

    $default  reduce using rule 68 (param_identifier)


State 131

   65 parameters_identifier_list_breakup: ',' parameters_list •

    $default  reduce using rule 65 (parameters_identifier_list_breakup)


State 132

   84 conditional_statements: IF '(' • simple_expression ')' statement conditional_statements_breakup

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    simple_expression          go to state 190
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 143
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 133

   91 return_statement_breakup: ';' •

    $default  reduce using rule 91 (return_statement_breakup)


State 134

   90 return_statement: RETURN return_statement_breakup •

    $default  reduce using rule 90 (return_statement)


State 135

   92 return_statement_breakup: expression • ';'

    ';'  shift, and go to state 191


State 136

   87 iterative_statements: WHILE '(' • simple_expression ')' statement

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    simple_expression          go to state 192
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 143
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 137

   88 iterative_statements: FOR '(' • expression ';' simple_expression ';' expression ')'

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 193
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 138

   89 iterative_statements: DO statement • WHILE '(' simple_expression ')' ';'

    WHILE  shift, and go to state 194


State 139

   93 break_statement: BREAK ';' •

    $default  reduce using rule 93 (break_statement)


State 140

  159 switch_case: SWITCH '(' • identifier ')' '{' case_list '}'

    identifier  shift, and go to state 195


State 141

  144 call: identifier '(' • arguments ')'

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    $default  reduce using rule 146 (arguments)

    expression                 go to state 196
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    arguments                  go to state 197
    arguments_list             go to state 198
    constant                   go to state 116


State 142

  115 unary_relation_expression: exclamation_operator unary_relation_expression •

    $default  reduce using rule 115 (unary_relation_expression)


State 143

  136 factor: mutable •
  138 mutable: mutable • mutable_breakup

    '['  shift, and go to state 176
    '.'  shift, and go to state 177

    $default  reduce using rule 136 (factor)

    mutable_breakup  go to state 179


State 144

   80 statment_list: statement • statment_list

    IF                    shift, and go to state 80
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 81
    WHILE                 shift, and go to state 82
    FOR                   shift, and go to state 83
    DO                    shift, and go to state 84
    BREAK                 shift, and go to state 85
    SWITCH                shift, and go to state 86
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    ';'                   shift, and go to state 93
    '{'                   shift, and go to state 94
    '('                   shift, and go to state 95

    '}'       reduce using rule 81 (statment_list)
    $default  reduce using rule 57 (storage_classes)

    variable_declaration       go to state 96
    structure_declaration      go to state 22
    struct_or_union            go to state 97
    storage_classes            go to state 24
    statement                  go to state 144
    compound_statement         go to state 99
    statment_list              go to state 199
    expression_statment        go to state 100
    conditional_statements     go to state 101
    iterative_statements       go to state 102
    return_statement           go to state 103
    break_statement            go to state 104
    expression                 go to state 105
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116
    switch_case                go to state 117


State 145

   79 compound_statement: '{' statment_list • '}'

    '}'  shift, and go to state 200


State 146

  141 immutable: '(' expression • ')'

    ')'  shift, and go to state 201


State 147

   50 structure_declaration: struct_or_union identifier • variable_declaration_list

    identifier  shift, and go to state 58

    variable_declaration_list        go to state 59
    variable_declaration_identifier  go to state 60


State 148

   82 expression_statment: expression ';' •

    $default  reduce using rule 82 (expression_statment)


State 149

  110 simple_expression_breakup: OR_operator • and_expression simple_expression_breakup

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    and_expression             go to state 202
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 143
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 150

  109 simple_expression: and_expression simple_expression_breakup •

    $default  reduce using rule 109 (simple_expression)


State 151

  113 and_expression_breakup: AND_operator • unary_relation_expression and_expression_breakup

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    unary_relation_expression  go to state 203
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 143
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 152

  112 and_expression: unary_relation_expression and_expression_breakup •

    $default  reduce using rule 112 (and_expression)


State 153

  124 relational_operators: equality_operator •

    $default  reduce using rule 124 (relational_operators)


State 154

  125 relational_operators: inequality_operator •

    $default  reduce using rule 125 (relational_operators)


State 155

  121 relational_operators: lessthan_assignment_operator •

    $default  reduce using rule 121 (relational_operators)


State 156

  123 relational_operators: lessthan_operator •

    $default  reduce using rule 123 (relational_operators)


State 157

  120 relational_operators: greaterthan_assignment_operator •

    $default  reduce using rule 120 (relational_operators)


State 158

  122 relational_operators: greaterthan_operator •

    $default  reduce using rule 122 (relational_operators)


State 159

  128 sum_operators: add_operator •

    $default  reduce using rule 128 (sum_operators)


State 160

  129 sum_operators: subtract_operator •

    $default  reduce using rule 129 (sum_operators)


State 161

  117 regular_expression: sum_expression regular_expression_breakup •

    $default  reduce using rule 117 (regular_expression)


State 162

  118 regular_expression_breakup: relational_operators • sum_expression

    identifier          shift, and go to state 87
    integer_constant    shift, and go to state 88
    string_constant     shift, and go to state 89
    float_constant      shift, and go to state 90
    character_constant  shift, and go to state 91
    '('                 shift, and go to state 95

    sum_expression  go to state 204
    term            go to state 111
    factor          go to state 112
    mutable         go to state 143
    immutable       go to state 114
    call            go to state 115
    constant        go to state 116


State 163

  126 sum_expression: sum_expression sum_operators • term

    identifier          shift, and go to state 87
    integer_constant    shift, and go to state 88
    string_constant     shift, and go to state 89
    float_constant      shift, and go to state 90
    character_constant  shift, and go to state 91
    '('                 shift, and go to state 95

    term       go to state 205
    factor     go to state 112
    mutable    go to state 143
    immutable  go to state 114
    call       go to state 115
    constant   go to state 116


State 164

  132 MULOP: multiplication_operator •

    $default  reduce using rule 132 (MULOP)


State 165

  133 MULOP: division_operator •

    $default  reduce using rule 133 (MULOP)


State 166

  134 MULOP: modulo_operator •

    $default  reduce using rule 134 (MULOP)


State 167

  130 term: term MULOP • factor

    identifier          shift, and go to state 87
    integer_constant    shift, and go to state 88
    string_constant     shift, and go to state 89
    float_constant      shift, and go to state 90
    character_constant  shift, and go to state 91
    '('                 shift, and go to state 95

    factor     go to state 206
    mutable    go to state 143
    immutable  go to state 114
    call       go to state 115
    constant   go to state 116


State 168

  106 expression_breakup: modulo_assignment_operator • expression

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 207
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 169

  104 expression_breakup: multiplication_assignment_operator • expression

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 208
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 170

  105 expression_breakup: division_assignment_operator • expression

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 209
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 171

  102 expression_breakup: addition_assignment_operator • expression

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 210
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 172

  103 expression_breakup: subtraction_assignment_operator • expression

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 211
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 173

  101 expression_breakup: assignment_operator • expression

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 212
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 174

  107 expression_breakup: increment_operator •

    $default  reduce using rule 107 (expression_breakup)


State 175

  108 expression_breakup: decrement_operator •

    $default  reduce using rule 108 (expression_breakup)


State 176

  139 mutable_breakup: '[' • expression ']'

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 213
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 177

  140 mutable_breakup: '.' • identifier

    identifier  shift, and go to state 214


State 178

   99 expression: mutable expression_breakup •

    $default  reduce using rule 99 (expression)


State 179

  138 mutable: mutable mutable_breakup •

    $default  reduce using rule 138 (mutable)


State 180

  158 enumerator: identifier assignment_operator integer_constant •

    $default  reduce using rule 158 (enumerator)


State 181

  156 enum_list: enum_list ',' enumerator •

    $default  reduce using rule 156 (enum_list)


State 182

  154 enum_declaration: ENUM identifier '{' enum_list '}' ';' •

    $default  reduce using rule 154 (enum_declaration)


State 183

   17 vdi: assignment_operator expression •

    $default  reduce using rule 17 (vdi)


State 184

   20 initilization_params: integer_constant • ']' initilization

    ']'  shift, and go to state 215


State 185

   21 initilization_params: ']' • string_initilization

    assignment_operator  shift, and go to state 216

    string_initilization  go to state 217


State 186

   18 identifier_array_type: '[' initilization_params •

    $default  reduce using rule 18 (identifier_array_type)


State 187

   48 V1: variable_declaration V1 •

    $default  reduce using rule 48 (V1)


State 188

   47 structure_definition: struct_or_union identifier $@2 '{' V1 '}' • ';'

    ';'  shift, and go to state 218


State 189

   69 param_identifier_breakup: '[' ']' •

    $default  reduce using rule 69 (param_identifier_breakup)


State 190

   84 conditional_statements: IF '(' simple_expression • ')' statement conditional_statements_breakup

    ')'  shift, and go to state 219


State 191

   92 return_statement_breakup: expression ';' •

    $default  reduce using rule 92 (return_statement_breakup)


State 192

   87 iterative_statements: WHILE '(' simple_expression • ')' statement

    ')'  shift, and go to state 220


State 193

   88 iterative_statements: FOR '(' expression • ';' simple_expression ';' expression ')'

    ';'  shift, and go to state 221


State 194

   89 iterative_statements: DO statement WHILE • '(' simple_expression ')' ';'

    '('  shift, and go to state 222


State 195

  159 switch_case: SWITCH '(' identifier • ')' '{' case_list '}'

    ')'  shift, and go to state 223


State 196

  147 arguments_list: expression • A

    ','  shift, and go to state 224

    $default  reduce using rule 149 (A)

    A  go to state 225


State 197

  144 call: identifier '(' arguments • ')'

    ')'  shift, and go to state 226


State 198

  145 arguments: arguments_list •

    $default  reduce using rule 145 (arguments)


State 199

   80 statment_list: statement statment_list •

    $default  reduce using rule 80 (statment_list)


State 200

   79 compound_statement: '{' statment_list '}' •

    $default  reduce using rule 79 (compound_statement)


State 201

  141 immutable: '(' expression ')' •

    $default  reduce using rule 141 (immutable)


State 202

  110 simple_expression_breakup: OR_operator and_expression • simple_expression_breakup

    OR_operator  shift, and go to state 149

    $default  reduce using rule 111 (simple_expression_breakup)

    simple_expression_breakup  go to state 227


State 203

  113 and_expression_breakup: AND_operator unary_relation_expression • and_expression_breakup

    AND_operator  shift, and go to state 151

    $default  reduce using rule 114 (and_expression_breakup)

    and_expression_breakup  go to state 228


State 204

  118 regular_expression_breakup: relational_operators sum_expression •
  126 sum_expression: sum_expression • sum_operators term

    add_operator       shift, and go to state 159
    subtract_operator  shift, and go to state 160

    $default  reduce using rule 118 (regular_expression_breakup)

    sum_operators  go to state 163


State 205

  126 sum_expression: sum_expression sum_operators term •
  130 term: term • MULOP factor

    multiplication_operator  shift, and go to state 164
    division_operator        shift, and go to state 165
    modulo_operator          shift, and go to state 166

    $default  reduce using rule 126 (sum_expression)

    MULOP  go to state 167


State 206

  130 term: term MULOP factor •

    $default  reduce using rule 130 (term)


State 207

  106 expression_breakup: modulo_assignment_operator expression •

    $default  reduce using rule 106 (expression_breakup)


State 208

  104 expression_breakup: multiplication_assignment_operator expression •

    $default  reduce using rule 104 (expression_breakup)


State 209

  105 expression_breakup: division_assignment_operator expression •

    $default  reduce using rule 105 (expression_breakup)


State 210

  102 expression_breakup: addition_assignment_operator expression •

    $default  reduce using rule 102 (expression_breakup)


State 211

  103 expression_breakup: subtraction_assignment_operator expression •

    $default  reduce using rule 103 (expression_breakup)


State 212

  101 expression_breakup: assignment_operator expression •

    $default  reduce using rule 101 (expression_breakup)


State 213

  139 mutable_breakup: '[' expression • ']'

    ']'  shift, and go to state 229


State 214

  140 mutable_breakup: '.' identifier •

    $default  reduce using rule 140 (mutable_breakup)


State 215

   20 initilization_params: integer_constant ']' • initilization

    assignment_operator  shift, and go to state 230

    $default  reduce using rule 24 (initilization)

    initilization         go to state 231
    string_initilization  go to state 232
    array_initialization  go to state 233


State 216

   94 string_initilization: assignment_operator • string_constant

    string_constant  shift, and go to state 234


State 217

   21 initilization_params: ']' string_initilization •

    $default  reduce using rule 21 (initilization_params)


State 218

   47 structure_definition: struct_or_union identifier $@2 '{' V1 '}' ';' •

    $default  reduce using rule 47 (structure_definition)


State 219

   84 conditional_statements: IF '(' simple_expression ')' • statement conditional_statements_breakup

    IF                    shift, and go to state 80
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 81
    WHILE                 shift, and go to state 82
    FOR                   shift, and go to state 83
    DO                    shift, and go to state 84
    BREAK                 shift, and go to state 85
    SWITCH                shift, and go to state 86
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    ';'                   shift, and go to state 93
    '{'                   shift, and go to state 94
    '('                   shift, and go to state 95

    $default  reduce using rule 57 (storage_classes)

    variable_declaration       go to state 96
    structure_declaration      go to state 22
    struct_or_union            go to state 97
    storage_classes            go to state 24
    statement                  go to state 235
    compound_statement         go to state 99
    expression_statment        go to state 100
    conditional_statements     go to state 101
    iterative_statements       go to state 102
    return_statement           go to state 103
    break_statement            go to state 104
    expression                 go to state 105
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116
    switch_case                go to state 117


State 220

   87 iterative_statements: WHILE '(' simple_expression ')' • statement

    IF                    shift, and go to state 80
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 81
    WHILE                 shift, and go to state 82
    FOR                   shift, and go to state 83
    DO                    shift, and go to state 84
    BREAK                 shift, and go to state 85
    SWITCH                shift, and go to state 86
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    ';'                   shift, and go to state 93
    '{'                   shift, and go to state 94
    '('                   shift, and go to state 95

    $default  reduce using rule 57 (storage_classes)

    variable_declaration       go to state 96
    structure_declaration      go to state 22
    struct_or_union            go to state 97
    storage_classes            go to state 24
    statement                  go to state 236
    compound_statement         go to state 99
    expression_statment        go to state 100
    conditional_statements     go to state 101
    iterative_statements       go to state 102
    return_statement           go to state 103
    break_statement            go to state 104
    expression                 go to state 105
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116
    switch_case                go to state 117


State 221

   88 iterative_statements: FOR '(' expression ';' • simple_expression ';' expression ')'

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    simple_expression          go to state 237
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 143
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 222

   89 iterative_statements: DO statement WHILE '(' • simple_expression ')' ';'

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    simple_expression          go to state 238
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 143
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 223

  159 switch_case: SWITCH '(' identifier ')' • '{' case_list '}'

    '{'  shift, and go to state 239


State 224

  148 A: ',' • expression A

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 240
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 225

  147 arguments_list: expression A •

    $default  reduce using rule 147 (arguments_list)


State 226

  144 call: identifier '(' arguments ')' •

    $default  reduce using rule 144 (call)


State 227

  110 simple_expression_breakup: OR_operator and_expression simple_expression_breakup •

    $default  reduce using rule 110 (simple_expression_breakup)


State 228

  113 and_expression_breakup: AND_operator unary_relation_expression and_expression_breakup •

    $default  reduce using rule 113 (and_expression_breakup)


State 229

  139 mutable_breakup: '[' expression ']' •

    $default  reduce using rule 139 (mutable_breakup)


State 230

   94 string_initilization: assignment_operator • string_constant
   95 array_initialization: assignment_operator • '{' array_int_declarations '}'

    string_constant  shift, and go to state 234
    '{'              shift, and go to state 241


State 231

   20 initilization_params: integer_constant ']' initilization •

    $default  reduce using rule 20 (initilization_params)


State 232

   22 initilization: string_initilization •

    $default  reduce using rule 22 (initilization)


State 233

   23 initilization: array_initialization •

    $default  reduce using rule 23 (initilization)


State 234

   94 string_initilization: assignment_operator string_constant •

    $default  reduce using rule 94 (string_initilization)


State 235

   84 conditional_statements: IF '(' simple_expression ')' statement • conditional_statements_breakup

    ELSE  shift, and go to state 242

    ELSE      [reduce using rule 86 (conditional_statements_breakup)]
    $default  reduce using rule 86 (conditional_statements_breakup)

    conditional_statements_breakup  go to state 243


State 236

   87 iterative_statements: WHILE '(' simple_expression ')' statement •

    $default  reduce using rule 87 (iterative_statements)


State 237

   88 iterative_statements: FOR '(' expression ';' simple_expression • ';' expression ')'

    ';'  shift, and go to state 244


State 238

   89 iterative_statements: DO statement WHILE '(' simple_expression • ')' ';'

    ')'  shift, and go to state 245


State 239

  159 switch_case: SWITCH '(' identifier ')' '{' • case_list '}'

    CASE     shift, and go to state 246
    DEFAULT  shift, and go to state 247

    $default  reduce using rule 165 (case_entry)

    case_list   go to state 248
    case_entry  go to state 249


State 240

  148 A: ',' expression • A

    ','  shift, and go to state 224

    $default  reduce using rule 149 (A)

    A  go to state 250


State 241

   95 array_initialization: assignment_operator '{' • array_int_declarations '}'

    integer_constant  shift, and go to state 251

    array_int_declarations  go to state 252


State 242

   85 conditional_statements_breakup: ELSE • statement

    IF                    shift, and go to state 80
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 81
    WHILE                 shift, and go to state 82
    FOR                   shift, and go to state 83
    DO                    shift, and go to state 84
    BREAK                 shift, and go to state 85
    SWITCH                shift, and go to state 86
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    ';'                   shift, and go to state 93
    '{'                   shift, and go to state 94
    '('                   shift, and go to state 95

    $default  reduce using rule 57 (storage_classes)

    variable_declaration       go to state 96
    structure_declaration      go to state 22
    struct_or_union            go to state 97
    storage_classes            go to state 24
    statement                  go to state 253
    compound_statement         go to state 99
    expression_statment        go to state 100
    conditional_statements     go to state 101
    iterative_statements       go to state 102
    return_statement           go to state 103
    break_statement            go to state 104
    expression                 go to state 105
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116
    switch_case                go to state 117


State 243

   84 conditional_statements: IF '(' simple_expression ')' statement conditional_statements_breakup •

    $default  reduce using rule 84 (conditional_statements)


State 244

   88 iterative_statements: FOR '(' expression ';' simple_expression ';' • expression ')'

    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    '('                   shift, and go to state 95

    expression                 go to state 254
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116


State 245

   89 iterative_statements: DO statement WHILE '(' simple_expression ')' • ';'

    ';'  shift, and go to state 255


State 246

  162 case_entry: CASE • constant ':' statement
  163           | CASE • constant SPREAD constant ':' statement

    integer_constant    shift, and go to state 88
    string_constant     shift, and go to state 89
    float_constant      shift, and go to state 90
    character_constant  shift, and go to state 91

    constant  go to state 256


State 247

  164 case_entry: DEFAULT • ':' statement

    ':'  shift, and go to state 257


State 248

  159 switch_case: SWITCH '(' identifier ')' '{' case_list • '}'
  161 case_list: case_list • case_entry BREAK ';'

    CASE     shift, and go to state 246
    DEFAULT  shift, and go to state 247
    '}'      shift, and go to state 258

    $default  reduce using rule 165 (case_entry)

    case_entry  go to state 259


State 249

  160 case_list: case_entry • BREAK ';'

    BREAK  shift, and go to state 260


State 250

  148 A: ',' expression A •

    $default  reduce using rule 148 (A)


State 251

   96 array_int_declarations: integer_constant • array_int_declarations_breakup

    ','  shift, and go to state 261

    $default  reduce using rule 98 (array_int_declarations_breakup)

    array_int_declarations_breakup  go to state 262


State 252

   95 array_initialization: assignment_operator '{' array_int_declarations • '}'

    '}'  shift, and go to state 263


State 253

   85 conditional_statements_breakup: ELSE statement •

    $default  reduce using rule 85 (conditional_statements_breakup)


State 254

   88 iterative_statements: FOR '(' expression ';' simple_expression ';' expression • ')'

    ')'  shift, and go to state 264


State 255

   89 iterative_statements: DO statement WHILE '(' simple_expression ')' ';' •

    $default  reduce using rule 89 (iterative_statements)


State 256

  162 case_entry: CASE constant • ':' statement
  163           | CASE constant • SPREAD constant ':' statement

    SPREAD  shift, and go to state 265
    ':'     shift, and go to state 266


State 257

  164 case_entry: DEFAULT ':' • statement

    IF                    shift, and go to state 80
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 81
    WHILE                 shift, and go to state 82
    FOR                   shift, and go to state 83
    DO                    shift, and go to state 84
    BREAK                 shift, and go to state 85
    SWITCH                shift, and go to state 86
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    ';'                   shift, and go to state 93
    '{'                   shift, and go to state 94
    '('                   shift, and go to state 95

    $default  reduce using rule 57 (storage_classes)

    variable_declaration       go to state 96
    structure_declaration      go to state 22
    struct_or_union            go to state 97
    storage_classes            go to state 24
    statement                  go to state 267
    compound_statement         go to state 99
    expression_statment        go to state 100
    conditional_statements     go to state 101
    iterative_statements       go to state 102
    return_statement           go to state 103
    break_statement            go to state 104
    expression                 go to state 105
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116
    switch_case                go to state 117


State 258

  159 switch_case: SWITCH '(' identifier ')' '{' case_list '}' •

    $default  reduce using rule 159 (switch_case)


State 259

  161 case_list: case_list case_entry • BREAK ';'

    BREAK  shift, and go to state 268


State 260

  160 case_list: case_entry BREAK • ';'

    ';'  shift, and go to state 269


State 261

   97 array_int_declarations_breakup: ',' • array_int_declarations

    integer_constant  shift, and go to state 251

    array_int_declarations  go to state 270


State 262

   96 array_int_declarations: integer_constant array_int_declarations_breakup •

    $default  reduce using rule 96 (array_int_declarations)


State 263

   95 array_initialization: assignment_operator '{' array_int_declarations '}' •

    $default  reduce using rule 95 (array_initialization)


State 264

   88 iterative_statements: FOR '(' expression ';' simple_expression ';' expression ')' •

    $default  reduce using rule 88 (iterative_statements)


State 265

  163 case_entry: CASE constant SPREAD • constant ':' statement

    integer_constant    shift, and go to state 88
    string_constant     shift, and go to state 89
    float_constant      shift, and go to state 90
    character_constant  shift, and go to state 91

    constant  go to state 271


State 266

  162 case_entry: CASE constant ':' • statement

    IF                    shift, and go to state 80
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 81
    WHILE                 shift, and go to state 82
    FOR                   shift, and go to state 83
    DO                    shift, and go to state 84
    BREAK                 shift, and go to state 85
    SWITCH                shift, and go to state 86
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    ';'                   shift, and go to state 93
    '{'                   shift, and go to state 94
    '('                   shift, and go to state 95

    $default  reduce using rule 57 (storage_classes)

    variable_declaration       go to state 96
    structure_declaration      go to state 22
    struct_or_union            go to state 97
    storage_classes            go to state 24
    statement                  go to state 272
    compound_statement         go to state 99
    expression_statment        go to state 100
    conditional_statements     go to state 101
    iterative_statements       go to state 102
    return_statement           go to state 103
    break_statement            go to state 104
    expression                 go to state 105
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116
    switch_case                go to state 117


State 267

  164 case_entry: DEFAULT ':' statement •

    $default  reduce using rule 164 (case_entry)


State 268

  161 case_list: case_list case_entry BREAK • ';'

    ';'  shift, and go to state 273


State 269

  160 case_list: case_entry BREAK ';' •

    $default  reduce using rule 160 (case_list)


State 270

   97 array_int_declarations_breakup: ',' array_int_declarations •

    $default  reduce using rule 97 (array_int_declarations_breakup)


State 271

  163 case_entry: CASE constant SPREAD constant • ':' statement

    ':'  shift, and go to state 274


State 272

  162 case_entry: CASE constant ':' statement •

    $default  reduce using rule 162 (case_entry)


State 273

  161 case_list: case_list case_entry BREAK ';' •

    $default  reduce using rule 161 (case_list)


State 274

  163 case_entry: CASE constant SPREAD constant ':' • statement

    IF                    shift, and go to state 80
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 81
    WHILE                 shift, and go to state 82
    FOR                   shift, and go to state 83
    DO                    shift, and go to state 84
    BREAK                 shift, and go to state 85
    SWITCH                shift, and go to state 86
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 87
    integer_constant      shift, and go to state 88
    string_constant       shift, and go to state 89
    float_constant        shift, and go to state 90
    character_constant    shift, and go to state 91
    exclamation_operator  shift, and go to state 92
    ';'                   shift, and go to state 93
    '{'                   shift, and go to state 94
    '('                   shift, and go to state 95

    $default  reduce using rule 57 (storage_classes)

    variable_declaration       go to state 96
    structure_declaration      go to state 22
    struct_or_union            go to state 97
    storage_classes            go to state 24
    statement                  go to state 275
    compound_statement         go to state 99
    expression_statment        go to state 100
    conditional_statements     go to state 101
    iterative_statements       go to state 102
    return_statement           go to state 103
    break_statement            go to state 104
    expression                 go to state 105
    simple_expression          go to state 106
    and_expression             go to state 107
    unary_relation_expression  go to state 108
    regular_expression         go to state 109
    sum_expression             go to state 110
    term                       go to state 111
    factor                     go to state 112
    mutable                    go to state 113
    immutable                  go to state 114
    call                       go to state 115
    constant                   go to state 116
    switch_case                go to state 117


State 275

  163 case_entry: CASE constant SPREAD constant ':' statement •

    $default  reduce using rule 163 (case_entry)
