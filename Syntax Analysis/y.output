Terminals unused in grammar

    MAIN
    ENDIF
    leftshift_assignment_operator
    rightshift_assignment_operator
    XOR_assignment_operator
    OR_assignment_operator
    AND_assignment_operator
    pipe_operator
    caret_operator
    amp_operator
    leftshift_operator
    rightshift_operator
    SIZEOF
    tilde_operator


State 0 conflicts: 9 shift/reduce
State 19 conflicts: 9 shift/reduce
State 88 conflicts: 1 shift/reduce
State 236 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration D

    3 D: declaration_list
    4  | ε

    5 declaration: variable_declaration
    6            | function_declaration
    7            | structure_definition
    8            | enum_declaration

    9 variable_declaration: storage_classes type_specifier variable_declaration_list ';'
   10                     | storage_classes CONST type_specifier variable_declaration_list ';'
   11                     | structure_declaration

   12 variable_declaration_list: variable_declaration_identifier V

   13 V: ',' variable_declaration_list
   14  | ε

   15 $@1: ε

   16 variable_declaration_identifier: identifier $@1 vdi

   17 vdi: identifier_array_type
   18    | assignment_operator expression

   19 identifier_array_type: '[' initilization_params
   20                      | ε

   21 initilization_params: integer_constant ']' initilization
   22                     | ']' string_initilization

   23 initilization: string_initilization
   24              | array_initialization
   25              | ε

   26 type_specifier: INT
   27               | CHAR
   28               | FLOAT
   29               | DOUBLE
   30               | LONG long_grammar
   31               | SHORT short_grammar
   32               | UNSIGNED unsigned_grammar
   33               | SIGNED signed_grammar
   34               | VOID

   35 unsigned_grammar: INT
   36                 | LONG long_grammar
   37                 | SHORT short_grammar
   38                 | ε

   39 signed_grammar: INT
   40               | LONG long_grammar
   41               | SHORT short_grammar
   42               | ε

   43 long_grammar: INT
   44             | ε

   45 short_grammar: INT
   46              | ε

   47 $@2: ε

   48 structure_definition: struct_or_union identifier $@2 '{' V1 '}' ';'

   49 V1: variable_declaration V1
   50   | ε

   51 structure_declaration: struct_or_union identifier variable_declaration_list

   52 struct_or_union: STRUCT
   53                | UNION

   54 storage_classes: AUTO
   55                | STATIC
   56                | REGISTER
   57                | EXTERN
   58                | ε

   59 function_declaration: function_declaration_type function_declaration_param_statement

   60 function_declaration_type: type_specifier identifier '('

   61 function_declaration_param_statement: params ')' statement

   62 params: parameters_list
   63       | ε

   64 parameters_list: type_specifier parameters_identifier_list

   65 parameters_identifier_list: param_identifier parameters_identifier_list_breakup

   66 parameters_identifier_list_breakup: ',' parameters_list
   67                                   | ε

   68 $@3: ε

   69 param_identifier: identifier $@3 param_identifier_breakup

   70 param_identifier_breakup: '[' ']'
   71                         | ε

   72 statement: expression_statment
   73          | compound_statement
   74          | conditional_statements
   75          | iterative_statements
   76          | return_statement
   77          | break_statement
   78          | variable_declaration
   79          | switch_case

   80 compound_statement: '{' statment_list '}'

   81 statment_list: statement statment_list
   82              | ε

   83 expression_statment: expression ';'
   84                    | ';'

   85 conditional_statements: IF '(' simple_expression ')' statement conditional_statements_breakup

   86 conditional_statements_breakup: ELSE statement
   87                               | ε

   88 iterative_statements: WHILE '(' simple_expression ')' statement
   89                     | FOR '(' expression ';' simple_expression ';' expression ')'
   90                     | DO statement WHILE '(' simple_expression ')' ';'

   91 return_statement: RETURN return_statement_breakup

   92 return_statement_breakup: ';'
   93                         | expression ';'

   94 break_statement: BREAK ';'

   95 string_initilization: assignment_operator string_constant

   96 array_initialization: assignment_operator '{' array_int_declarations '}'

   97 array_int_declarations: integer_constant array_int_declarations_breakup

   98 array_int_declarations_breakup: ',' array_int_declarations
   99                               | ε

  100 expression: mutable expression_breakup
  101           | simple_expression

  102 expression_breakup: assignment_operator expression
  103                   | addition_assignment_operator expression
  104                   | subtraction_assignment_operator expression
  105                   | multiplication_assignment_operator expression
  106                   | division_assignment_operator expression
  107                   | modulo_assignment_operator expression
  108                   | increment_operator
  109                   | decrement_operator

  110 simple_expression: and_expression simple_expression_breakup

  111 simple_expression_breakup: OR_operator and_expression simple_expression_breakup
  112                          | ε

  113 and_expression: unary_relation_expression and_expression_breakup

  114 and_expression_breakup: AND_operator unary_relation_expression and_expression_breakup
  115                       | ε

  116 unary_relation_expression: exclamation_operator unary_relation_expression
  117                          | regular_expression

  118 regular_expression: sum_expression regular_expression_breakup

  119 regular_expression_breakup: relational_operators sum_expression
  120                           | ε

  121 relational_operators: greaterthan_assignment_operator
  122                     | lessthan_assignment_operator
  123                     | greaterthan_operator
  124                     | lessthan_operator
  125                     | equality_operator
  126                     | inequality_operator

  127 sum_expression: sum_expression sum_operators term
  128               | term

  129 sum_operators: add_operator
  130              | subtract_operator

  131 term: term MULOP factor
  132     | factor

  133 MULOP: multiplication_operator
  134      | division_operator
  135      | modulo_operator

  136 factor: immutable
  137       | mutable

  138 mutable: identifier
  139        | mutable mutable_breakup

  140 mutable_breakup: '[' expression ']'
  141                | '.' identifier

  142 immutable: '(' expression ')'
  143          | call
  144          | constant

  145 call: identifier '(' arguments ')'

  146 arguments: arguments_list
  147          | ε

  148 arguments_list: expression A

  149 A: ',' expression A
  150  | ε

  151 constant: integer_constant
  152         | string_constant
  153         | float_constant
  154         | character_constant

  155 enum_declaration: ENUM identifier '{' enum_list '}' ';'

  156 enum_list: enumerator
  157          | enum_list ',' enumerator

  158 enumerator: identifier
  159           | identifier assignment_operator integer_constant

  160 switch_case: SWITCH '(' identifier ')' '{' case_list '}'

  161 case_list: case_entry BREAK ';'
  162          | case_list case_entry BREAK ';'

  163 case_entry: CASE constant ':' statement
  164           | CASE constant SPREAD constant ':' statement
  165           | DEFAULT ':' statement
  166           | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 60 85 88 89 90 142 145 160
    ')' (41) 61 85 88 89 90 142 145 160
    ',' (44) 13 66 98 149 157
    '.' (46) 141
    ':' (58) 163 164 165
    ';' (59) 9 10 48 83 84 89 90 92 93 94 155 161 162
    '[' (91) 19 70 140
    ']' (93) 21 22 70 140
    '{' (123) 48 80 96 155 160
    '}' (125) 48 80 96 155 160
    error (256)
    IF (258) 85
    INT (259) 26 35 39 43 45
    CHAR (260) 27
    FLOAT (261) 28
    DOUBLE (262) 29
    LONG (263) 30 36 40
    SHORT (264) 31 37 41
    SIGNED (265) 33
    UNSIGNED (266) 32
    CONST (267) 10
    STRUCT (268) 52
    ENUM (269) 155
    UNION (270) 53
    RETURN (271) 91
    MAIN (272)
    VOID (273) 34
    WHILE (274) 88 90
    FOR (275) 89
    DO (276) 90
    BREAK (277) 94 161 162
    ENDIF (278)
    SWITCH (279) 160
    CASE (280) 163 164
    DEFAULT (281) 165
    SPREAD (282) 164
    AUTO (283) 54
    STATIC (284) 55
    REGISTER (285) 56
    EXTERN (286) 57
    identifier (287) 16 48 51 60 69 138 141 145 155 158 159 160
    integer_constant (288) 21 97 151 159
    string_constant (289) 95 152
    float_constant (290) 153
    character_constant (291) 154
    ELSE (292) 86
    leftshift_assignment_operator (293)
    rightshift_assignment_operator (294)
    XOR_assignment_operator (295)
    OR_assignment_operator (296)
    AND_assignment_operator (297)
    modulo_assignment_operator (298) 107
    multiplication_assignment_operator (299) 105
    division_assignment_operator (300) 106
    addition_assignment_operator (301) 103
    subtraction_assignment_operator (302) 104
    assignment_operator (303) 18 95 96 102 159
    OR_operator (304) 111
    AND_operator (305) 114
    pipe_operator (306)
    caret_operator (307)
    amp_operator (308)
    equality_operator (309) 125
    inequality_operator (310) 126
    lessthan_assignment_operator (311) 122
    lessthan_operator (312) 124
    greaterthan_assignment_operator (313) 121
    greaterthan_operator (314) 123
    leftshift_operator (315)
    rightshift_operator (316)
    add_operator (317) 129
    subtract_operator (318) 130
    multiplication_operator (319) 133
    division_operator (320) 134
    modulo_operator (321) 135
    SIZEOF (322)
    tilde_operator (323)
    exclamation_operator (324) 116
    increment_operator (325) 108
    decrement_operator (326) 109


Nonterminals, with rules where they appear

    $accept (82)
        on left: 0
    program (83)
        on left: 1
        on right: 0
    declaration_list (84)
        on left: 2
        on right: 1 3
    D (85)
        on left: 3 4
        on right: 2
    declaration (86)
        on left: 5 6 7 8
        on right: 2
    variable_declaration (87)
        on left: 9 10 11
        on right: 5 49 78
    variable_declaration_list (88)
        on left: 12
        on right: 9 10 13 51
    V (89)
        on left: 13 14
        on right: 12
    variable_declaration_identifier (90)
        on left: 16
        on right: 12
    $@1 (91)
        on left: 15
        on right: 16
    vdi (92)
        on left: 17 18
        on right: 16
    identifier_array_type (93)
        on left: 19 20
        on right: 17
    initilization_params (94)
        on left: 21 22
        on right: 19
    initilization (95)
        on left: 23 24 25
        on right: 21
    type_specifier (96)
        on left: 26 27 28 29 30 31 32 33 34
        on right: 9 10 60 64
    unsigned_grammar (97)
        on left: 35 36 37 38
        on right: 32
    signed_grammar (98)
        on left: 39 40 41 42
        on right: 33
    long_grammar (99)
        on left: 43 44
        on right: 30 36 40
    short_grammar (100)
        on left: 45 46
        on right: 31 37 41
    structure_definition (101)
        on left: 48
        on right: 7
    $@2 (102)
        on left: 47
        on right: 48
    V1 (103)
        on left: 49 50
        on right: 48 49
    structure_declaration (104)
        on left: 51
        on right: 11
    struct_or_union (105)
        on left: 52 53
        on right: 48 51
    storage_classes (106)
        on left: 54 55 56 57 58
        on right: 9 10
    function_declaration (107)
        on left: 59
        on right: 6
    function_declaration_type (108)
        on left: 60
        on right: 59
    function_declaration_param_statement (109)
        on left: 61
        on right: 59
    params (110)
        on left: 62 63
        on right: 61
    parameters_list (111)
        on left: 64
        on right: 62 66
    parameters_identifier_list (112)
        on left: 65
        on right: 64
    parameters_identifier_list_breakup (113)
        on left: 66 67
        on right: 65
    param_identifier (114)
        on left: 69
        on right: 65
    $@3 (115)
        on left: 68
        on right: 69
    param_identifier_breakup (116)
        on left: 70 71
        on right: 69
    statement (117)
        on left: 72 73 74 75 76 77 78 79
        on right: 61 81 85 86 88 90 163 164 165
    compound_statement (118)
        on left: 80
        on right: 73
    statment_list (119)
        on left: 81 82
        on right: 80 81
    expression_statment (120)
        on left: 83 84
        on right: 72
    conditional_statements (121)
        on left: 85
        on right: 74
    conditional_statements_breakup (122)
        on left: 86 87
        on right: 85
    iterative_statements (123)
        on left: 88 89 90
        on right: 75
    return_statement (124)
        on left: 91
        on right: 76
    return_statement_breakup (125)
        on left: 92 93
        on right: 91
    break_statement (126)
        on left: 94
        on right: 77
    string_initilization (127)
        on left: 95
        on right: 22 23
    array_initialization (128)
        on left: 96
        on right: 24
    array_int_declarations (129)
        on left: 97
        on right: 96 98
    array_int_declarations_breakup (130)
        on left: 98 99
        on right: 97
    expression (131)
        on left: 100 101
        on right: 18 83 89 93 102 103 104 105 106 107 140 142 148 149
    expression_breakup (132)
        on left: 102 103 104 105 106 107 108 109
        on right: 100
    simple_expression (133)
        on left: 110
        on right: 85 88 89 90 101
    simple_expression_breakup (134)
        on left: 111 112
        on right: 110 111
    and_expression (135)
        on left: 113
        on right: 110 111
    and_expression_breakup (136)
        on left: 114 115
        on right: 113 114
    unary_relation_expression (137)
        on left: 116 117
        on right: 113 114 116
    regular_expression (138)
        on left: 118
        on right: 117
    regular_expression_breakup (139)
        on left: 119 120
        on right: 118
    relational_operators (140)
        on left: 121 122 123 124 125 126
        on right: 119
    sum_expression (141)
        on left: 127 128
        on right: 118 119 127
    sum_operators (142)
        on left: 129 130
        on right: 127
    term (143)
        on left: 131 132
        on right: 127 128 131
    MULOP (144)
        on left: 133 134 135
        on right: 131
    factor (145)
        on left: 136 137
        on right: 131 132
    mutable (146)
        on left: 138 139
        on right: 100 137 139
    mutable_breakup (147)
        on left: 140 141
        on right: 139
    immutable (148)
        on left: 142 143 144
        on right: 136
    call (149)
        on left: 145
        on right: 143
    arguments (150)
        on left: 146 147
        on right: 145
    arguments_list (151)
        on left: 148
        on right: 146
    A (152)
        on left: 149 150
        on right: 148 149
    constant (153)
        on left: 151 152 153 154
        on right: 144 163 164
    enum_declaration (154)
        on left: 155
        on right: 8
    enum_list (155)
        on left: 156 157
        on right: 155 157
    enumerator (156)
        on left: 158 159
        on right: 156 157
    switch_case (157)
        on left: 160
        on right: 79
    case_list (158)
        on left: 161 162
        on right: 160 162
    case_entry (159)
        on left: 163 164 165 166
        on right: 161 162


State 0

    0 $accept: • program $end

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    STRUCT    shift, and go to state 9
    ENUM      shift, and go to state 10
    UNION     shift, and go to state 11
    VOID      shift, and go to state 12
    AUTO      shift, and go to state 13
    STATIC    shift, and go to state 14
    REGISTER  shift, and go to state 15
    EXTERN    shift, and go to state 16

    INT       [reduce using rule 58 (storage_classes)]
    CHAR      [reduce using rule 58 (storage_classes)]
    FLOAT     [reduce using rule 58 (storage_classes)]
    DOUBLE    [reduce using rule 58 (storage_classes)]
    LONG      [reduce using rule 58 (storage_classes)]
    SHORT     [reduce using rule 58 (storage_classes)]
    SIGNED    [reduce using rule 58 (storage_classes)]
    UNSIGNED  [reduce using rule 58 (storage_classes)]
    VOID      [reduce using rule 58 (storage_classes)]
    $default  reduce using rule 58 (storage_classes)

    program                    go to state 17
    declaration_list           go to state 18
    declaration                go to state 19
    variable_declaration       go to state 20
    type_specifier             go to state 21
    structure_definition       go to state 22
    structure_declaration      go to state 23
    struct_or_union            go to state 24
    storage_classes            go to state 25
    function_declaration       go to state 26
    function_declaration_type  go to state 27
    enum_declaration           go to state 28


State 1

   26 type_specifier: INT •

    $default  reduce using rule 26 (type_specifier)


State 2

   27 type_specifier: CHAR •

    $default  reduce using rule 27 (type_specifier)


State 3

   28 type_specifier: FLOAT •

    $default  reduce using rule 28 (type_specifier)


State 4

   29 type_specifier: DOUBLE •

    $default  reduce using rule 29 (type_specifier)


State 5

   30 type_specifier: LONG • long_grammar

    INT  shift, and go to state 29

    $default  reduce using rule 44 (long_grammar)

    long_grammar  go to state 30


State 6

   31 type_specifier: SHORT • short_grammar

    INT  shift, and go to state 31

    $default  reduce using rule 46 (short_grammar)

    short_grammar  go to state 32


State 7

   33 type_specifier: SIGNED • signed_grammar

    INT    shift, and go to state 33
    LONG   shift, and go to state 34
    SHORT  shift, and go to state 35

    $default  reduce using rule 42 (signed_grammar)

    signed_grammar  go to state 36


State 8

   32 type_specifier: UNSIGNED • unsigned_grammar

    INT    shift, and go to state 37
    LONG   shift, and go to state 38
    SHORT  shift, and go to state 39

    $default  reduce using rule 38 (unsigned_grammar)

    unsigned_grammar  go to state 40


State 9

   52 struct_or_union: STRUCT •

    $default  reduce using rule 52 (struct_or_union)


State 10

  155 enum_declaration: ENUM • identifier '{' enum_list '}' ';'

    identifier  shift, and go to state 41


State 11

   53 struct_or_union: UNION •

    $default  reduce using rule 53 (struct_or_union)


State 12

   34 type_specifier: VOID •

    $default  reduce using rule 34 (type_specifier)


State 13

   54 storage_classes: AUTO •

    $default  reduce using rule 54 (storage_classes)


State 14

   55 storage_classes: STATIC •

    $default  reduce using rule 55 (storage_classes)


State 15

   56 storage_classes: REGISTER •

    $default  reduce using rule 56 (storage_classes)


State 16

   57 storage_classes: EXTERN •

    $default  reduce using rule 57 (storage_classes)


State 17

    0 $accept: program • $end

    $end  shift, and go to state 42


State 18

    1 program: declaration_list •

    $default  reduce using rule 1 (program)


State 19

    2 declaration_list: declaration • D

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    STRUCT    shift, and go to state 9
    ENUM      shift, and go to state 10
    UNION     shift, and go to state 11
    VOID      shift, and go to state 12
    AUTO      shift, and go to state 13
    STATIC    shift, and go to state 14
    REGISTER  shift, and go to state 15
    EXTERN    shift, and go to state 16

    INT       [reduce using rule 58 (storage_classes)]
    CHAR      [reduce using rule 58 (storage_classes)]
    FLOAT     [reduce using rule 58 (storage_classes)]
    DOUBLE    [reduce using rule 58 (storage_classes)]
    LONG      [reduce using rule 58 (storage_classes)]
    SHORT     [reduce using rule 58 (storage_classes)]
    SIGNED    [reduce using rule 58 (storage_classes)]
    UNSIGNED  [reduce using rule 58 (storage_classes)]
    CONST     reduce using rule 58 (storage_classes)
    VOID      [reduce using rule 58 (storage_classes)]
    $default  reduce using rule 4 (D)

    declaration_list           go to state 43
    D                          go to state 44
    declaration                go to state 19
    variable_declaration       go to state 20
    type_specifier             go to state 21
    structure_definition       go to state 22
    structure_declaration      go to state 23
    struct_or_union            go to state 24
    storage_classes            go to state 25
    function_declaration       go to state 26
    function_declaration_type  go to state 27
    enum_declaration           go to state 28


State 20

    5 declaration: variable_declaration •

    $default  reduce using rule 5 (declaration)


State 21

   60 function_declaration_type: type_specifier • identifier '('

    identifier  shift, and go to state 45


State 22

    7 declaration: structure_definition •

    $default  reduce using rule 7 (declaration)


State 23

   11 variable_declaration: structure_declaration •

    $default  reduce using rule 11 (variable_declaration)


State 24

   48 structure_definition: struct_or_union • identifier $@2 '{' V1 '}' ';'
   51 structure_declaration: struct_or_union • identifier variable_declaration_list

    identifier  shift, and go to state 46


State 25

    9 variable_declaration: storage_classes • type_specifier variable_declaration_list ';'
   10                     | storage_classes • CONST type_specifier variable_declaration_list ';'

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    CONST     shift, and go to state 47
    VOID      shift, and go to state 12

    type_specifier  go to state 48


State 26

    6 declaration: function_declaration •

    $default  reduce using rule 6 (declaration)


State 27

   59 function_declaration: function_declaration_type • function_declaration_param_statement

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 12

    $default  reduce using rule 63 (params)

    type_specifier                        go to state 49
    function_declaration_param_statement  go to state 50
    params                                go to state 51
    parameters_list                       go to state 52


State 28

    8 declaration: enum_declaration •

    $default  reduce using rule 8 (declaration)


State 29

   43 long_grammar: INT •

    $default  reduce using rule 43 (long_grammar)


State 30

   30 type_specifier: LONG long_grammar •

    $default  reduce using rule 30 (type_specifier)


State 31

   45 short_grammar: INT •

    $default  reduce using rule 45 (short_grammar)


State 32

   31 type_specifier: SHORT short_grammar •

    $default  reduce using rule 31 (type_specifier)


State 33

   39 signed_grammar: INT •

    $default  reduce using rule 39 (signed_grammar)


State 34

   40 signed_grammar: LONG • long_grammar

    INT  shift, and go to state 29

    $default  reduce using rule 44 (long_grammar)

    long_grammar  go to state 53


State 35

   41 signed_grammar: SHORT • short_grammar

    INT  shift, and go to state 31

    $default  reduce using rule 46 (short_grammar)

    short_grammar  go to state 54


State 36

   33 type_specifier: SIGNED signed_grammar •

    $default  reduce using rule 33 (type_specifier)


State 37

   35 unsigned_grammar: INT •

    $default  reduce using rule 35 (unsigned_grammar)


State 38

   36 unsigned_grammar: LONG • long_grammar

    INT  shift, and go to state 29

    $default  reduce using rule 44 (long_grammar)

    long_grammar  go to state 55


State 39

   37 unsigned_grammar: SHORT • short_grammar

    INT  shift, and go to state 31

    $default  reduce using rule 46 (short_grammar)

    short_grammar  go to state 56


State 40

   32 type_specifier: UNSIGNED unsigned_grammar •

    $default  reduce using rule 32 (type_specifier)


State 41

  155 enum_declaration: ENUM identifier • '{' enum_list '}' ';'

    '{'  shift, and go to state 57


State 42

    0 $accept: program $end •

    $default  accept


State 43

    3 D: declaration_list •

    $default  reduce using rule 3 (D)


State 44

    2 declaration_list: declaration D •

    $default  reduce using rule 2 (declaration_list)


State 45

   60 function_declaration_type: type_specifier identifier • '('

    '('  shift, and go to state 58


State 46

   48 structure_definition: struct_or_union identifier • $@2 '{' V1 '}' ';'
   51 structure_declaration: struct_or_union identifier • variable_declaration_list

    identifier  shift, and go to state 59

    $default  reduce using rule 47 ($@2)

    variable_declaration_list        go to state 60
    variable_declaration_identifier  go to state 61
    $@2                              go to state 62


State 47

   10 variable_declaration: storage_classes CONST • type_specifier variable_declaration_list ';'

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 12

    type_specifier  go to state 63


State 48

    9 variable_declaration: storage_classes type_specifier • variable_declaration_list ';'

    identifier  shift, and go to state 59

    variable_declaration_list        go to state 64
    variable_declaration_identifier  go to state 61


State 49

   64 parameters_list: type_specifier • parameters_identifier_list

    identifier  shift, and go to state 65

    parameters_identifier_list  go to state 66
    param_identifier            go to state 67


State 50

   59 function_declaration: function_declaration_type function_declaration_param_statement •

    $default  reduce using rule 59 (function_declaration)


State 51

   61 function_declaration_param_statement: params • ')' statement

    ')'  shift, and go to state 68


State 52

   62 params: parameters_list •

    $default  reduce using rule 62 (params)


State 53

   40 signed_grammar: LONG long_grammar •

    $default  reduce using rule 40 (signed_grammar)


State 54

   41 signed_grammar: SHORT short_grammar •

    $default  reduce using rule 41 (signed_grammar)


State 55

   36 unsigned_grammar: LONG long_grammar •

    $default  reduce using rule 36 (unsigned_grammar)


State 56

   37 unsigned_grammar: SHORT short_grammar •

    $default  reduce using rule 37 (unsigned_grammar)


State 57

  155 enum_declaration: ENUM identifier '{' • enum_list '}' ';'

    identifier  shift, and go to state 69

    enum_list   go to state 70
    enumerator  go to state 71


State 58

   60 function_declaration_type: type_specifier identifier '(' •

    $default  reduce using rule 60 (function_declaration_type)


State 59

   16 variable_declaration_identifier: identifier • $@1 vdi

    $default  reduce using rule 15 ($@1)

    $@1  go to state 72


State 60

   51 structure_declaration: struct_or_union identifier variable_declaration_list •

    $default  reduce using rule 51 (structure_declaration)


State 61

   12 variable_declaration_list: variable_declaration_identifier • V

    ','  shift, and go to state 73

    $default  reduce using rule 14 (V)

    V  go to state 74


State 62

   48 structure_definition: struct_or_union identifier $@2 • '{' V1 '}' ';'

    '{'  shift, and go to state 75


State 63

   10 variable_declaration: storage_classes CONST type_specifier • variable_declaration_list ';'

    identifier  shift, and go to state 59

    variable_declaration_list        go to state 76
    variable_declaration_identifier  go to state 61


State 64

    9 variable_declaration: storage_classes type_specifier variable_declaration_list • ';'

    ';'  shift, and go to state 77


State 65

   69 param_identifier: identifier • $@3 param_identifier_breakup

    $default  reduce using rule 68 ($@3)

    $@3  go to state 78


State 66

   64 parameters_list: type_specifier parameters_identifier_list •

    $default  reduce using rule 64 (parameters_list)


State 67

   65 parameters_identifier_list: param_identifier • parameters_identifier_list_breakup

    ','  shift, and go to state 79

    $default  reduce using rule 67 (parameters_identifier_list_breakup)

    parameters_identifier_list_breakup  go to state 80


State 68

   61 function_declaration_param_statement: params ')' • statement

    IF                    shift, and go to state 81
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 82
    WHILE                 shift, and go to state 83
    FOR                   shift, and go to state 84
    DO                    shift, and go to state 85
    BREAK                 shift, and go to state 86
    SWITCH                shift, and go to state 87
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    ';'                   shift, and go to state 94
    '{'                   shift, and go to state 95
    '('                   shift, and go to state 96

    $default  reduce using rule 58 (storage_classes)

    variable_declaration       go to state 97
    structure_declaration      go to state 23
    struct_or_union            go to state 98
    storage_classes            go to state 25
    statement                  go to state 99
    compound_statement         go to state 100
    expression_statment        go to state 101
    conditional_statements     go to state 102
    iterative_statements       go to state 103
    return_statement           go to state 104
    break_statement            go to state 105
    expression                 go to state 106
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117
    switch_case                go to state 118


State 69

  158 enumerator: identifier •
  159           | identifier • assignment_operator integer_constant

    assignment_operator  shift, and go to state 119

    $default  reduce using rule 158 (enumerator)


State 70

  155 enum_declaration: ENUM identifier '{' enum_list • '}' ';'
  157 enum_list: enum_list • ',' enumerator

    ','  shift, and go to state 120
    '}'  shift, and go to state 121


State 71

  156 enum_list: enumerator •

    $default  reduce using rule 156 (enum_list)


State 72

   16 variable_declaration_identifier: identifier $@1 • vdi

    assignment_operator  shift, and go to state 122
    '['                  shift, and go to state 123

    $default  reduce using rule 20 (identifier_array_type)

    vdi                    go to state 124
    identifier_array_type  go to state 125


State 73

   13 V: ',' • variable_declaration_list

    identifier  shift, and go to state 59

    variable_declaration_list        go to state 126
    variable_declaration_identifier  go to state 61


State 74

   12 variable_declaration_list: variable_declaration_identifier V •

    $default  reduce using rule 12 (variable_declaration_list)


State 75

   48 structure_definition: struct_or_union identifier $@2 '{' • V1 '}' ';'

    STRUCT    shift, and go to state 9
    UNION     shift, and go to state 11
    AUTO      shift, and go to state 13
    STATIC    shift, and go to state 14
    REGISTER  shift, and go to state 15
    EXTERN    shift, and go to state 16

    '}'       reduce using rule 50 (V1)
    $default  reduce using rule 58 (storage_classes)

    variable_declaration   go to state 127
    V1                     go to state 128
    structure_declaration  go to state 23
    struct_or_union        go to state 98
    storage_classes        go to state 25


State 76

   10 variable_declaration: storage_classes CONST type_specifier variable_declaration_list • ';'

    ';'  shift, and go to state 129


State 77

    9 variable_declaration: storage_classes type_specifier variable_declaration_list ';' •

    $default  reduce using rule 9 (variable_declaration)


State 78

   69 param_identifier: identifier $@3 • param_identifier_breakup

    '['  shift, and go to state 130

    $default  reduce using rule 71 (param_identifier_breakup)

    param_identifier_breakup  go to state 131


State 79

   66 parameters_identifier_list_breakup: ',' • parameters_list

    INT       shift, and go to state 1
    CHAR      shift, and go to state 2
    FLOAT     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    LONG      shift, and go to state 5
    SHORT     shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 12

    type_specifier   go to state 49
    parameters_list  go to state 132


State 80

   65 parameters_identifier_list: param_identifier parameters_identifier_list_breakup •

    $default  reduce using rule 65 (parameters_identifier_list)


State 81

   85 conditional_statements: IF • '(' simple_expression ')' statement conditional_statements_breakup

    '('  shift, and go to state 133


State 82

   91 return_statement: RETURN • return_statement_breakup

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    ';'                   shift, and go to state 134
    '('                   shift, and go to state 96

    return_statement_breakup   go to state 135
    expression                 go to state 136
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 83

   88 iterative_statements: WHILE • '(' simple_expression ')' statement

    '('  shift, and go to state 137


State 84

   89 iterative_statements: FOR • '(' expression ';' simple_expression ';' expression ')'

    '('  shift, and go to state 138


State 85

   90 iterative_statements: DO • statement WHILE '(' simple_expression ')' ';'

    IF                    shift, and go to state 81
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 82
    WHILE                 shift, and go to state 83
    FOR                   shift, and go to state 84
    DO                    shift, and go to state 85
    BREAK                 shift, and go to state 86
    SWITCH                shift, and go to state 87
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    ';'                   shift, and go to state 94
    '{'                   shift, and go to state 95
    '('                   shift, and go to state 96

    $default  reduce using rule 58 (storage_classes)

    variable_declaration       go to state 97
    structure_declaration      go to state 23
    struct_or_union            go to state 98
    storage_classes            go to state 25
    statement                  go to state 139
    compound_statement         go to state 100
    expression_statment        go to state 101
    conditional_statements     go to state 102
    iterative_statements       go to state 103
    return_statement           go to state 104
    break_statement            go to state 105
    expression                 go to state 106
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117
    switch_case                go to state 118


State 86

   94 break_statement: BREAK • ';'

    ';'  shift, and go to state 140


State 87

  160 switch_case: SWITCH • '(' identifier ')' '{' case_list '}'

    '('  shift, and go to state 141


State 88

  138 mutable: identifier •
  145 call: identifier • '(' arguments ')'

    '('  shift, and go to state 142

    '('       [reduce using rule 138 (mutable)]
    $default  reduce using rule 138 (mutable)


State 89

  151 constant: integer_constant •

    $default  reduce using rule 151 (constant)


State 90

  152 constant: string_constant •

    $default  reduce using rule 152 (constant)


State 91

  153 constant: float_constant •

    $default  reduce using rule 153 (constant)


State 92

  154 constant: character_constant •

    $default  reduce using rule 154 (constant)


State 93

  116 unary_relation_expression: exclamation_operator • unary_relation_expression

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    unary_relation_expression  go to state 143
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 144
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 94

   84 expression_statment: ';' •

    $default  reduce using rule 84 (expression_statment)


State 95

   80 compound_statement: '{' • statment_list '}'

    IF                    shift, and go to state 81
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 82
    WHILE                 shift, and go to state 83
    FOR                   shift, and go to state 84
    DO                    shift, and go to state 85
    BREAK                 shift, and go to state 86
    SWITCH                shift, and go to state 87
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    ';'                   shift, and go to state 94
    '{'                   shift, and go to state 95
    '('                   shift, and go to state 96

    '}'       reduce using rule 82 (statment_list)
    $default  reduce using rule 58 (storage_classes)

    variable_declaration       go to state 97
    structure_declaration      go to state 23
    struct_or_union            go to state 98
    storage_classes            go to state 25
    statement                  go to state 145
    compound_statement         go to state 100
    statment_list              go to state 146
    expression_statment        go to state 101
    conditional_statements     go to state 102
    iterative_statements       go to state 103
    return_statement           go to state 104
    break_statement            go to state 105
    expression                 go to state 106
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117
    switch_case                go to state 118


State 96

  142 immutable: '(' • expression ')'

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 147
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 97

   78 statement: variable_declaration •

    $default  reduce using rule 78 (statement)


State 98

   51 structure_declaration: struct_or_union • identifier variable_declaration_list

    identifier  shift, and go to state 148


State 99

   61 function_declaration_param_statement: params ')' statement •

    $default  reduce using rule 61 (function_declaration_param_statement)


State 100

   73 statement: compound_statement •

    $default  reduce using rule 73 (statement)


State 101

   72 statement: expression_statment •

    $default  reduce using rule 72 (statement)


State 102

   74 statement: conditional_statements •

    $default  reduce using rule 74 (statement)


State 103

   75 statement: iterative_statements •

    $default  reduce using rule 75 (statement)


State 104

   76 statement: return_statement •

    $default  reduce using rule 76 (statement)


State 105

   77 statement: break_statement •

    $default  reduce using rule 77 (statement)


State 106

   83 expression_statment: expression • ';'

    ';'  shift, and go to state 149


State 107

  101 expression: simple_expression •

    $default  reduce using rule 101 (expression)


State 108

  110 simple_expression: and_expression • simple_expression_breakup

    OR_operator  shift, and go to state 150

    $default  reduce using rule 112 (simple_expression_breakup)

    simple_expression_breakup  go to state 151


State 109

  113 and_expression: unary_relation_expression • and_expression_breakup

    AND_operator  shift, and go to state 152

    $default  reduce using rule 115 (and_expression_breakup)

    and_expression_breakup  go to state 153


State 110

  117 unary_relation_expression: regular_expression •

    $default  reduce using rule 117 (unary_relation_expression)


State 111

  118 regular_expression: sum_expression • regular_expression_breakup
  127 sum_expression: sum_expression • sum_operators term

    equality_operator                shift, and go to state 154
    inequality_operator              shift, and go to state 155
    lessthan_assignment_operator     shift, and go to state 156
    lessthan_operator                shift, and go to state 157
    greaterthan_assignment_operator  shift, and go to state 158
    greaterthan_operator             shift, and go to state 159
    add_operator                     shift, and go to state 160
    subtract_operator                shift, and go to state 161

    $default  reduce using rule 120 (regular_expression_breakup)

    regular_expression_breakup  go to state 162
    relational_operators        go to state 163
    sum_operators               go to state 164


State 112

  128 sum_expression: term •
  131 term: term • MULOP factor

    multiplication_operator  shift, and go to state 165
    division_operator        shift, and go to state 166
    modulo_operator          shift, and go to state 167

    $default  reduce using rule 128 (sum_expression)

    MULOP  go to state 168


State 113

  132 term: factor •

    $default  reduce using rule 132 (term)


State 114

  100 expression: mutable • expression_breakup
  137 factor: mutable •
  139 mutable: mutable • mutable_breakup

    modulo_assignment_operator          shift, and go to state 169
    multiplication_assignment_operator  shift, and go to state 170
    division_assignment_operator        shift, and go to state 171
    addition_assignment_operator        shift, and go to state 172
    subtraction_assignment_operator     shift, and go to state 173
    assignment_operator                 shift, and go to state 174
    increment_operator                  shift, and go to state 175
    decrement_operator                  shift, and go to state 176
    '['                                 shift, and go to state 177
    '.'                                 shift, and go to state 178

    $default  reduce using rule 137 (factor)

    expression_breakup  go to state 179
    mutable_breakup     go to state 180


State 115

  136 factor: immutable •

    $default  reduce using rule 136 (factor)


State 116

  143 immutable: call •

    $default  reduce using rule 143 (immutable)


State 117

  144 immutable: constant •

    $default  reduce using rule 144 (immutable)


State 118

   79 statement: switch_case •

    $default  reduce using rule 79 (statement)


State 119

  159 enumerator: identifier assignment_operator • integer_constant

    integer_constant  shift, and go to state 181


State 120

  157 enum_list: enum_list ',' • enumerator

    identifier  shift, and go to state 69

    enumerator  go to state 182


State 121

  155 enum_declaration: ENUM identifier '{' enum_list '}' • ';'

    ';'  shift, and go to state 183


State 122

   18 vdi: assignment_operator • expression

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 184
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 123

   19 identifier_array_type: '[' • initilization_params

    integer_constant  shift, and go to state 185
    ']'               shift, and go to state 186

    initilization_params  go to state 187


State 124

   16 variable_declaration_identifier: identifier $@1 vdi •

    $default  reduce using rule 16 (variable_declaration_identifier)


State 125

   17 vdi: identifier_array_type •

    $default  reduce using rule 17 (vdi)


State 126

   13 V: ',' variable_declaration_list •

    $default  reduce using rule 13 (V)


State 127

   49 V1: variable_declaration • V1

    STRUCT    shift, and go to state 9
    UNION     shift, and go to state 11
    AUTO      shift, and go to state 13
    STATIC    shift, and go to state 14
    REGISTER  shift, and go to state 15
    EXTERN    shift, and go to state 16

    '}'       reduce using rule 50 (V1)
    $default  reduce using rule 58 (storage_classes)

    variable_declaration   go to state 127
    V1                     go to state 188
    structure_declaration  go to state 23
    struct_or_union        go to state 98
    storage_classes        go to state 25


State 128

   48 structure_definition: struct_or_union identifier $@2 '{' V1 • '}' ';'

    '}'  shift, and go to state 189


State 129

   10 variable_declaration: storage_classes CONST type_specifier variable_declaration_list ';' •

    $default  reduce using rule 10 (variable_declaration)


State 130

   70 param_identifier_breakup: '[' • ']'

    ']'  shift, and go to state 190


State 131

   69 param_identifier: identifier $@3 param_identifier_breakup •

    $default  reduce using rule 69 (param_identifier)


State 132

   66 parameters_identifier_list_breakup: ',' parameters_list •

    $default  reduce using rule 66 (parameters_identifier_list_breakup)


State 133

   85 conditional_statements: IF '(' • simple_expression ')' statement conditional_statements_breakup

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    simple_expression          go to state 191
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 144
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 134

   92 return_statement_breakup: ';' •

    $default  reduce using rule 92 (return_statement_breakup)


State 135

   91 return_statement: RETURN return_statement_breakup •

    $default  reduce using rule 91 (return_statement)


State 136

   93 return_statement_breakup: expression • ';'

    ';'  shift, and go to state 192


State 137

   88 iterative_statements: WHILE '(' • simple_expression ')' statement

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    simple_expression          go to state 193
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 144
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 138

   89 iterative_statements: FOR '(' • expression ';' simple_expression ';' expression ')'

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 194
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 139

   90 iterative_statements: DO statement • WHILE '(' simple_expression ')' ';'

    WHILE  shift, and go to state 195


State 140

   94 break_statement: BREAK ';' •

    $default  reduce using rule 94 (break_statement)


State 141

  160 switch_case: SWITCH '(' • identifier ')' '{' case_list '}'

    identifier  shift, and go to state 196


State 142

  145 call: identifier '(' • arguments ')'

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    $default  reduce using rule 147 (arguments)

    expression                 go to state 197
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    arguments                  go to state 198
    arguments_list             go to state 199
    constant                   go to state 117


State 143

  116 unary_relation_expression: exclamation_operator unary_relation_expression •

    $default  reduce using rule 116 (unary_relation_expression)


State 144

  137 factor: mutable •
  139 mutable: mutable • mutable_breakup

    '['  shift, and go to state 177
    '.'  shift, and go to state 178

    $default  reduce using rule 137 (factor)

    mutable_breakup  go to state 180


State 145

   81 statment_list: statement • statment_list

    IF                    shift, and go to state 81
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 82
    WHILE                 shift, and go to state 83
    FOR                   shift, and go to state 84
    DO                    shift, and go to state 85
    BREAK                 shift, and go to state 86
    SWITCH                shift, and go to state 87
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    ';'                   shift, and go to state 94
    '{'                   shift, and go to state 95
    '('                   shift, and go to state 96

    '}'       reduce using rule 82 (statment_list)
    $default  reduce using rule 58 (storage_classes)

    variable_declaration       go to state 97
    structure_declaration      go to state 23
    struct_or_union            go to state 98
    storage_classes            go to state 25
    statement                  go to state 145
    compound_statement         go to state 100
    statment_list              go to state 200
    expression_statment        go to state 101
    conditional_statements     go to state 102
    iterative_statements       go to state 103
    return_statement           go to state 104
    break_statement            go to state 105
    expression                 go to state 106
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117
    switch_case                go to state 118


State 146

   80 compound_statement: '{' statment_list • '}'

    '}'  shift, and go to state 201


State 147

  142 immutable: '(' expression • ')'

    ')'  shift, and go to state 202


State 148

   51 structure_declaration: struct_or_union identifier • variable_declaration_list

    identifier  shift, and go to state 59

    variable_declaration_list        go to state 60
    variable_declaration_identifier  go to state 61


State 149

   83 expression_statment: expression ';' •

    $default  reduce using rule 83 (expression_statment)


State 150

  111 simple_expression_breakup: OR_operator • and_expression simple_expression_breakup

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    and_expression             go to state 203
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 144
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 151

  110 simple_expression: and_expression simple_expression_breakup •

    $default  reduce using rule 110 (simple_expression)


State 152

  114 and_expression_breakup: AND_operator • unary_relation_expression and_expression_breakup

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    unary_relation_expression  go to state 204
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 144
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 153

  113 and_expression: unary_relation_expression and_expression_breakup •

    $default  reduce using rule 113 (and_expression)


State 154

  125 relational_operators: equality_operator •

    $default  reduce using rule 125 (relational_operators)


State 155

  126 relational_operators: inequality_operator •

    $default  reduce using rule 126 (relational_operators)


State 156

  122 relational_operators: lessthan_assignment_operator •

    $default  reduce using rule 122 (relational_operators)


State 157

  124 relational_operators: lessthan_operator •

    $default  reduce using rule 124 (relational_operators)


State 158

  121 relational_operators: greaterthan_assignment_operator •

    $default  reduce using rule 121 (relational_operators)


State 159

  123 relational_operators: greaterthan_operator •

    $default  reduce using rule 123 (relational_operators)


State 160

  129 sum_operators: add_operator •

    $default  reduce using rule 129 (sum_operators)


State 161

  130 sum_operators: subtract_operator •

    $default  reduce using rule 130 (sum_operators)


State 162

  118 regular_expression: sum_expression regular_expression_breakup •

    $default  reduce using rule 118 (regular_expression)


State 163

  119 regular_expression_breakup: relational_operators • sum_expression

    identifier          shift, and go to state 88
    integer_constant    shift, and go to state 89
    string_constant     shift, and go to state 90
    float_constant      shift, and go to state 91
    character_constant  shift, and go to state 92
    '('                 shift, and go to state 96

    sum_expression  go to state 205
    term            go to state 112
    factor          go to state 113
    mutable         go to state 144
    immutable       go to state 115
    call            go to state 116
    constant        go to state 117


State 164

  127 sum_expression: sum_expression sum_operators • term

    identifier          shift, and go to state 88
    integer_constant    shift, and go to state 89
    string_constant     shift, and go to state 90
    float_constant      shift, and go to state 91
    character_constant  shift, and go to state 92
    '('                 shift, and go to state 96

    term       go to state 206
    factor     go to state 113
    mutable    go to state 144
    immutable  go to state 115
    call       go to state 116
    constant   go to state 117


State 165

  133 MULOP: multiplication_operator •

    $default  reduce using rule 133 (MULOP)


State 166

  134 MULOP: division_operator •

    $default  reduce using rule 134 (MULOP)


State 167

  135 MULOP: modulo_operator •

    $default  reduce using rule 135 (MULOP)


State 168

  131 term: term MULOP • factor

    identifier          shift, and go to state 88
    integer_constant    shift, and go to state 89
    string_constant     shift, and go to state 90
    float_constant      shift, and go to state 91
    character_constant  shift, and go to state 92
    '('                 shift, and go to state 96

    factor     go to state 207
    mutable    go to state 144
    immutable  go to state 115
    call       go to state 116
    constant   go to state 117


State 169

  107 expression_breakup: modulo_assignment_operator • expression

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 208
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 170

  105 expression_breakup: multiplication_assignment_operator • expression

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 209
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 171

  106 expression_breakup: division_assignment_operator • expression

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 210
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 172

  103 expression_breakup: addition_assignment_operator • expression

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 211
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 173

  104 expression_breakup: subtraction_assignment_operator • expression

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 212
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 174

  102 expression_breakup: assignment_operator • expression

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 213
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 175

  108 expression_breakup: increment_operator •

    $default  reduce using rule 108 (expression_breakup)


State 176

  109 expression_breakup: decrement_operator •

    $default  reduce using rule 109 (expression_breakup)


State 177

  140 mutable_breakup: '[' • expression ']'

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 214
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 178

  141 mutable_breakup: '.' • identifier

    identifier  shift, and go to state 215


State 179

  100 expression: mutable expression_breakup •

    $default  reduce using rule 100 (expression)


State 180

  139 mutable: mutable mutable_breakup •

    $default  reduce using rule 139 (mutable)


State 181

  159 enumerator: identifier assignment_operator integer_constant •

    $default  reduce using rule 159 (enumerator)


State 182

  157 enum_list: enum_list ',' enumerator •

    $default  reduce using rule 157 (enum_list)


State 183

  155 enum_declaration: ENUM identifier '{' enum_list '}' ';' •

    $default  reduce using rule 155 (enum_declaration)


State 184

   18 vdi: assignment_operator expression •

    $default  reduce using rule 18 (vdi)


State 185

   21 initilization_params: integer_constant • ']' initilization

    ']'  shift, and go to state 216


State 186

   22 initilization_params: ']' • string_initilization

    assignment_operator  shift, and go to state 217

    string_initilization  go to state 218


State 187

   19 identifier_array_type: '[' initilization_params •

    $default  reduce using rule 19 (identifier_array_type)


State 188

   49 V1: variable_declaration V1 •

    $default  reduce using rule 49 (V1)


State 189

   48 structure_definition: struct_or_union identifier $@2 '{' V1 '}' • ';'

    ';'  shift, and go to state 219


State 190

   70 param_identifier_breakup: '[' ']' •

    $default  reduce using rule 70 (param_identifier_breakup)


State 191

   85 conditional_statements: IF '(' simple_expression • ')' statement conditional_statements_breakup

    ')'  shift, and go to state 220


State 192

   93 return_statement_breakup: expression ';' •

    $default  reduce using rule 93 (return_statement_breakup)


State 193

   88 iterative_statements: WHILE '(' simple_expression • ')' statement

    ')'  shift, and go to state 221


State 194

   89 iterative_statements: FOR '(' expression • ';' simple_expression ';' expression ')'

    ';'  shift, and go to state 222


State 195

   90 iterative_statements: DO statement WHILE • '(' simple_expression ')' ';'

    '('  shift, and go to state 223


State 196

  160 switch_case: SWITCH '(' identifier • ')' '{' case_list '}'

    ')'  shift, and go to state 224


State 197

  148 arguments_list: expression • A

    ','  shift, and go to state 225

    $default  reduce using rule 150 (A)

    A  go to state 226


State 198

  145 call: identifier '(' arguments • ')'

    ')'  shift, and go to state 227


State 199

  146 arguments: arguments_list •

    $default  reduce using rule 146 (arguments)


State 200

   81 statment_list: statement statment_list •

    $default  reduce using rule 81 (statment_list)


State 201

   80 compound_statement: '{' statment_list '}' •

    $default  reduce using rule 80 (compound_statement)


State 202

  142 immutable: '(' expression ')' •

    $default  reduce using rule 142 (immutable)


State 203

  111 simple_expression_breakup: OR_operator and_expression • simple_expression_breakup

    OR_operator  shift, and go to state 150

    $default  reduce using rule 112 (simple_expression_breakup)

    simple_expression_breakup  go to state 228


State 204

  114 and_expression_breakup: AND_operator unary_relation_expression • and_expression_breakup

    AND_operator  shift, and go to state 152

    $default  reduce using rule 115 (and_expression_breakup)

    and_expression_breakup  go to state 229


State 205

  119 regular_expression_breakup: relational_operators sum_expression •
  127 sum_expression: sum_expression • sum_operators term

    add_operator       shift, and go to state 160
    subtract_operator  shift, and go to state 161

    $default  reduce using rule 119 (regular_expression_breakup)

    sum_operators  go to state 164


State 206

  127 sum_expression: sum_expression sum_operators term •
  131 term: term • MULOP factor

    multiplication_operator  shift, and go to state 165
    division_operator        shift, and go to state 166
    modulo_operator          shift, and go to state 167

    $default  reduce using rule 127 (sum_expression)

    MULOP  go to state 168


State 207

  131 term: term MULOP factor •

    $default  reduce using rule 131 (term)


State 208

  107 expression_breakup: modulo_assignment_operator expression •

    $default  reduce using rule 107 (expression_breakup)


State 209

  105 expression_breakup: multiplication_assignment_operator expression •

    $default  reduce using rule 105 (expression_breakup)


State 210

  106 expression_breakup: division_assignment_operator expression •

    $default  reduce using rule 106 (expression_breakup)


State 211

  103 expression_breakup: addition_assignment_operator expression •

    $default  reduce using rule 103 (expression_breakup)


State 212

  104 expression_breakup: subtraction_assignment_operator expression •

    $default  reduce using rule 104 (expression_breakup)


State 213

  102 expression_breakup: assignment_operator expression •

    $default  reduce using rule 102 (expression_breakup)


State 214

  140 mutable_breakup: '[' expression • ']'

    ']'  shift, and go to state 230


State 215

  141 mutable_breakup: '.' identifier •

    $default  reduce using rule 141 (mutable_breakup)


State 216

   21 initilization_params: integer_constant ']' • initilization

    assignment_operator  shift, and go to state 231

    $default  reduce using rule 25 (initilization)

    initilization         go to state 232
    string_initilization  go to state 233
    array_initialization  go to state 234


State 217

   95 string_initilization: assignment_operator • string_constant

    string_constant  shift, and go to state 235


State 218

   22 initilization_params: ']' string_initilization •

    $default  reduce using rule 22 (initilization_params)


State 219

   48 structure_definition: struct_or_union identifier $@2 '{' V1 '}' ';' •

    $default  reduce using rule 48 (structure_definition)


State 220

   85 conditional_statements: IF '(' simple_expression ')' • statement conditional_statements_breakup

    IF                    shift, and go to state 81
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 82
    WHILE                 shift, and go to state 83
    FOR                   shift, and go to state 84
    DO                    shift, and go to state 85
    BREAK                 shift, and go to state 86
    SWITCH                shift, and go to state 87
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    ';'                   shift, and go to state 94
    '{'                   shift, and go to state 95
    '('                   shift, and go to state 96

    $default  reduce using rule 58 (storage_classes)

    variable_declaration       go to state 97
    structure_declaration      go to state 23
    struct_or_union            go to state 98
    storage_classes            go to state 25
    statement                  go to state 236
    compound_statement         go to state 100
    expression_statment        go to state 101
    conditional_statements     go to state 102
    iterative_statements       go to state 103
    return_statement           go to state 104
    break_statement            go to state 105
    expression                 go to state 106
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117
    switch_case                go to state 118


State 221

   88 iterative_statements: WHILE '(' simple_expression ')' • statement

    IF                    shift, and go to state 81
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 82
    WHILE                 shift, and go to state 83
    FOR                   shift, and go to state 84
    DO                    shift, and go to state 85
    BREAK                 shift, and go to state 86
    SWITCH                shift, and go to state 87
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    ';'                   shift, and go to state 94
    '{'                   shift, and go to state 95
    '('                   shift, and go to state 96

    $default  reduce using rule 58 (storage_classes)

    variable_declaration       go to state 97
    structure_declaration      go to state 23
    struct_or_union            go to state 98
    storage_classes            go to state 25
    statement                  go to state 237
    compound_statement         go to state 100
    expression_statment        go to state 101
    conditional_statements     go to state 102
    iterative_statements       go to state 103
    return_statement           go to state 104
    break_statement            go to state 105
    expression                 go to state 106
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117
    switch_case                go to state 118


State 222

   89 iterative_statements: FOR '(' expression ';' • simple_expression ';' expression ')'

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    simple_expression          go to state 238
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 144
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 223

   90 iterative_statements: DO statement WHILE '(' • simple_expression ')' ';'

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    simple_expression          go to state 239
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 144
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 224

  160 switch_case: SWITCH '(' identifier ')' • '{' case_list '}'

    '{'  shift, and go to state 240


State 225

  149 A: ',' • expression A

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 241
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 226

  148 arguments_list: expression A •

    $default  reduce using rule 148 (arguments_list)


State 227

  145 call: identifier '(' arguments ')' •

    $default  reduce using rule 145 (call)


State 228

  111 simple_expression_breakup: OR_operator and_expression simple_expression_breakup •

    $default  reduce using rule 111 (simple_expression_breakup)


State 229

  114 and_expression_breakup: AND_operator unary_relation_expression and_expression_breakup •

    $default  reduce using rule 114 (and_expression_breakup)


State 230

  140 mutable_breakup: '[' expression ']' •

    $default  reduce using rule 140 (mutable_breakup)


State 231

   95 string_initilization: assignment_operator • string_constant
   96 array_initialization: assignment_operator • '{' array_int_declarations '}'

    string_constant  shift, and go to state 235
    '{'              shift, and go to state 242


State 232

   21 initilization_params: integer_constant ']' initilization •

    $default  reduce using rule 21 (initilization_params)


State 233

   23 initilization: string_initilization •

    $default  reduce using rule 23 (initilization)


State 234

   24 initilization: array_initialization •

    $default  reduce using rule 24 (initilization)


State 235

   95 string_initilization: assignment_operator string_constant •

    $default  reduce using rule 95 (string_initilization)


State 236

   85 conditional_statements: IF '(' simple_expression ')' statement • conditional_statements_breakup

    ELSE  shift, and go to state 243

    ELSE      [reduce using rule 87 (conditional_statements_breakup)]
    $default  reduce using rule 87 (conditional_statements_breakup)

    conditional_statements_breakup  go to state 244


State 237

   88 iterative_statements: WHILE '(' simple_expression ')' statement •

    $default  reduce using rule 88 (iterative_statements)


State 238

   89 iterative_statements: FOR '(' expression ';' simple_expression • ';' expression ')'

    ';'  shift, and go to state 245


State 239

   90 iterative_statements: DO statement WHILE '(' simple_expression • ')' ';'

    ')'  shift, and go to state 246


State 240

  160 switch_case: SWITCH '(' identifier ')' '{' • case_list '}'

    CASE     shift, and go to state 247
    DEFAULT  shift, and go to state 248

    $default  reduce using rule 166 (case_entry)

    case_list   go to state 249
    case_entry  go to state 250


State 241

  149 A: ',' expression • A

    ','  shift, and go to state 225

    $default  reduce using rule 150 (A)

    A  go to state 251


State 242

   96 array_initialization: assignment_operator '{' • array_int_declarations '}'

    integer_constant  shift, and go to state 252

    array_int_declarations  go to state 253


State 243

   86 conditional_statements_breakup: ELSE • statement

    IF                    shift, and go to state 81
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 82
    WHILE                 shift, and go to state 83
    FOR                   shift, and go to state 84
    DO                    shift, and go to state 85
    BREAK                 shift, and go to state 86
    SWITCH                shift, and go to state 87
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    ';'                   shift, and go to state 94
    '{'                   shift, and go to state 95
    '('                   shift, and go to state 96

    $default  reduce using rule 58 (storage_classes)

    variable_declaration       go to state 97
    structure_declaration      go to state 23
    struct_or_union            go to state 98
    storage_classes            go to state 25
    statement                  go to state 254
    compound_statement         go to state 100
    expression_statment        go to state 101
    conditional_statements     go to state 102
    iterative_statements       go to state 103
    return_statement           go to state 104
    break_statement            go to state 105
    expression                 go to state 106
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117
    switch_case                go to state 118


State 244

   85 conditional_statements: IF '(' simple_expression ')' statement conditional_statements_breakup •

    $default  reduce using rule 85 (conditional_statements)


State 245

   89 iterative_statements: FOR '(' expression ';' simple_expression ';' • expression ')'

    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    '('                   shift, and go to state 96

    expression                 go to state 255
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117


State 246

   90 iterative_statements: DO statement WHILE '(' simple_expression ')' • ';'

    ';'  shift, and go to state 256


State 247

  163 case_entry: CASE • constant ':' statement
  164           | CASE • constant SPREAD constant ':' statement

    integer_constant    shift, and go to state 89
    string_constant     shift, and go to state 90
    float_constant      shift, and go to state 91
    character_constant  shift, and go to state 92

    constant  go to state 257


State 248

  165 case_entry: DEFAULT • ':' statement

    ':'  shift, and go to state 258


State 249

  160 switch_case: SWITCH '(' identifier ')' '{' case_list • '}'
  162 case_list: case_list • case_entry BREAK ';'

    CASE     shift, and go to state 247
    DEFAULT  shift, and go to state 248
    '}'      shift, and go to state 259

    $default  reduce using rule 166 (case_entry)

    case_entry  go to state 260


State 250

  161 case_list: case_entry • BREAK ';'

    BREAK  shift, and go to state 261


State 251

  149 A: ',' expression A •

    $default  reduce using rule 149 (A)


State 252

   97 array_int_declarations: integer_constant • array_int_declarations_breakup

    ','  shift, and go to state 262

    $default  reduce using rule 99 (array_int_declarations_breakup)

    array_int_declarations_breakup  go to state 263


State 253

   96 array_initialization: assignment_operator '{' array_int_declarations • '}'

    '}'  shift, and go to state 264


State 254

   86 conditional_statements_breakup: ELSE statement •

    $default  reduce using rule 86 (conditional_statements_breakup)


State 255

   89 iterative_statements: FOR '(' expression ';' simple_expression ';' expression • ')'

    ')'  shift, and go to state 265


State 256

   90 iterative_statements: DO statement WHILE '(' simple_expression ')' ';' •

    $default  reduce using rule 90 (iterative_statements)


State 257

  163 case_entry: CASE constant • ':' statement
  164           | CASE constant • SPREAD constant ':' statement

    SPREAD  shift, and go to state 266
    ':'     shift, and go to state 267


State 258

  165 case_entry: DEFAULT ':' • statement

    IF                    shift, and go to state 81
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 82
    WHILE                 shift, and go to state 83
    FOR                   shift, and go to state 84
    DO                    shift, and go to state 85
    BREAK                 shift, and go to state 86
    SWITCH                shift, and go to state 87
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    ';'                   shift, and go to state 94
    '{'                   shift, and go to state 95
    '('                   shift, and go to state 96

    $default  reduce using rule 58 (storage_classes)

    variable_declaration       go to state 97
    structure_declaration      go to state 23
    struct_or_union            go to state 98
    storage_classes            go to state 25
    statement                  go to state 268
    compound_statement         go to state 100
    expression_statment        go to state 101
    conditional_statements     go to state 102
    iterative_statements       go to state 103
    return_statement           go to state 104
    break_statement            go to state 105
    expression                 go to state 106
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117
    switch_case                go to state 118


State 259

  160 switch_case: SWITCH '(' identifier ')' '{' case_list '}' •

    $default  reduce using rule 160 (switch_case)


State 260

  162 case_list: case_list case_entry • BREAK ';'

    BREAK  shift, and go to state 269


State 261

  161 case_list: case_entry BREAK • ';'

    ';'  shift, and go to state 270


State 262

   98 array_int_declarations_breakup: ',' • array_int_declarations

    integer_constant  shift, and go to state 252

    array_int_declarations  go to state 271


State 263

   97 array_int_declarations: integer_constant array_int_declarations_breakup •

    $default  reduce using rule 97 (array_int_declarations)


State 264

   96 array_initialization: assignment_operator '{' array_int_declarations '}' •

    $default  reduce using rule 96 (array_initialization)


State 265

   89 iterative_statements: FOR '(' expression ';' simple_expression ';' expression ')' •

    $default  reduce using rule 89 (iterative_statements)


State 266

  164 case_entry: CASE constant SPREAD • constant ':' statement

    integer_constant    shift, and go to state 89
    string_constant     shift, and go to state 90
    float_constant      shift, and go to state 91
    character_constant  shift, and go to state 92

    constant  go to state 272


State 267

  163 case_entry: CASE constant ':' • statement

    IF                    shift, and go to state 81
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 82
    WHILE                 shift, and go to state 83
    FOR                   shift, and go to state 84
    DO                    shift, and go to state 85
    BREAK                 shift, and go to state 86
    SWITCH                shift, and go to state 87
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    ';'                   shift, and go to state 94
    '{'                   shift, and go to state 95
    '('                   shift, and go to state 96

    $default  reduce using rule 58 (storage_classes)

    variable_declaration       go to state 97
    structure_declaration      go to state 23
    struct_or_union            go to state 98
    storage_classes            go to state 25
    statement                  go to state 273
    compound_statement         go to state 100
    expression_statment        go to state 101
    conditional_statements     go to state 102
    iterative_statements       go to state 103
    return_statement           go to state 104
    break_statement            go to state 105
    expression                 go to state 106
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117
    switch_case                go to state 118


State 268

  165 case_entry: DEFAULT ':' statement •

    $default  reduce using rule 165 (case_entry)


State 269

  162 case_list: case_list case_entry BREAK • ';'

    ';'  shift, and go to state 274


State 270

  161 case_list: case_entry BREAK ';' •

    $default  reduce using rule 161 (case_list)


State 271

   98 array_int_declarations_breakup: ',' array_int_declarations •

    $default  reduce using rule 98 (array_int_declarations_breakup)


State 272

  164 case_entry: CASE constant SPREAD constant • ':' statement

    ':'  shift, and go to state 275


State 273

  163 case_entry: CASE constant ':' statement •

    $default  reduce using rule 163 (case_entry)


State 274

  162 case_list: case_list case_entry BREAK ';' •

    $default  reduce using rule 162 (case_list)


State 275

  164 case_entry: CASE constant SPREAD constant ':' • statement

    IF                    shift, and go to state 81
    STRUCT                shift, and go to state 9
    UNION                 shift, and go to state 11
    RETURN                shift, and go to state 82
    WHILE                 shift, and go to state 83
    FOR                   shift, and go to state 84
    DO                    shift, and go to state 85
    BREAK                 shift, and go to state 86
    SWITCH                shift, and go to state 87
    AUTO                  shift, and go to state 13
    STATIC                shift, and go to state 14
    REGISTER              shift, and go to state 15
    EXTERN                shift, and go to state 16
    identifier            shift, and go to state 88
    integer_constant      shift, and go to state 89
    string_constant       shift, and go to state 90
    float_constant        shift, and go to state 91
    character_constant    shift, and go to state 92
    exclamation_operator  shift, and go to state 93
    ';'                   shift, and go to state 94
    '{'                   shift, and go to state 95
    '('                   shift, and go to state 96

    $default  reduce using rule 58 (storage_classes)

    variable_declaration       go to state 97
    structure_declaration      go to state 23
    struct_or_union            go to state 98
    storage_classes            go to state 25
    statement                  go to state 276
    compound_statement         go to state 100
    expression_statment        go to state 101
    conditional_statements     go to state 102
    iterative_statements       go to state 103
    return_statement           go to state 104
    break_statement            go to state 105
    expression                 go to state 106
    simple_expression          go to state 107
    and_expression             go to state 108
    unary_relation_expression  go to state 109
    regular_expression         go to state 110
    sum_expression             go to state 111
    term                       go to state 112
    factor                     go to state 113
    mutable                    go to state 114
    immutable                  go to state 115
    call                       go to state 116
    constant                   go to state 117
    switch_case                go to state 118


State 276

  164 case_entry: CASE constant SPREAD constant ':' statement •

    $default  reduce using rule 164 (case_entry)
